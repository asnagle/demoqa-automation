<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="123" passed="118" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-08T12:34:01 IST" name="Surefire suite" finished-at="2025-09-08T13:10:27 IST" duration-ms="2186164">
    <groups>
    </groups>
    <test started-at="2025-09-08T12:34:01 IST" name="Surefire test" finished-at="2025-09-08T13:10:27 IST" duration-ms="2186164">
      <class name="tests.FormTests">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T12:59:53 IST" name="setup" finished-at="2025-09-08T13:00:00 IST" duration-ms="7247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.FormsCard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="FormsCard()[pri:1, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:00 IST" name="FormsCard" finished-at="2025-09-08T13:00:14 IST" duration-ms="14261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FormsCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:14 IST" name="tearDown" finished-at="2025-09-08T13:00:15 IST" duration-ms="600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FormsCard status=SUCCESS method=FormTests.FormsCard()[pri:1, instance:tests.FormTests@479460a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:15 IST" name="setup" finished-at="2025-09-08T13:00:37 IST" duration-ms="22112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.FormButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="FormButton()[pri:2, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:37 IST" name="FormButton" finished-at="2025-09-08T13:00:37 IST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FormButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:37 IST" name="tearDown" finished-at="2025-09-08T13:00:38 IST" duration-ms="333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FormButton status=SUCCESS method=FormTests.FormButton()[pri:2, instance:tests.FormTests@479460a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:38 IST" name="setup" finished-at="2025-09-08T13:00:49 IST" duration-ms="11426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:49 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-08T13:00:55 IST" duration-ms="6049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Johny', lastName='Bravo', userMail='Jbravo@demoqa.com', gender='Male', mobile='9.238343488E9', dob='15/08/2000', subject='Computer Science', hobbies='Sports,Music', picturePath='/TestData/Mphoto.jpg', address='511 Grant 481, Prattsville\n Arkansas 72129\n United States', state='NCR', city='Delhi'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:55 IST" name="tearDown" finished-at="2025-09-08T13:00:56 IST" duration-ms="568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:00:56 IST" name="setup" finished-at="2025-09-08T13:01:14 IST" duration-ms="18394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:01:14 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-08T13:01:21 IST" duration-ms="6594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Gene', lastName='Femina', userMail='GFemina@demoqa.com', gender='Female', mobile='1.888343432E9', dob='22/05/2002', subject='Accounting', hobbies='Music,Reading', picturePath='/TestData/Fphoto.png', address='512 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Uttar Pradesh', city='Merrut'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:01:21 IST" name="tearDown" finished-at="2025-09-08T13:01:21 IST" duration-ms="465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:01:21 IST" name="setup" finished-at="2025-09-08T13:01:57 IST" duration-ms="35589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:01:57 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-08T13:02:03 IST" duration-ms="6294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Bud', lastName='Wisem', userMail='BWisem@demoqa.com', gender='Other', mobile='8.932465432E9', dob='31/12/1999', subject='Biology', hobbies='Reading', picturePath='/TestData/Ophoto.jpg', address='513 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Haryana', city='Panipat'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:02:03 IST" name="tearDown" finished-at="2025-09-08T13:02:03 IST" duration-ms="490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:02:03 IST" name="setup" finished-at="2025-09-08T13:02:26 IST" duration-ms="22461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:02:26 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-08T13:02:32 IST" duration-ms="6521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Tom', lastName='Boss', userMail='TBoss@demoqa.com', gender='Male', mobile='7.839875281E9', dob='1/26/03', subject='Social Studies', hobbies='Sports,Reading', picturePath='/TestData/M2photo.jpg', address='514 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Rajasthan', city='Jaiselmer'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@479460a6]" started-at="2025-09-08T13:02:32 IST" name="tearDown" finished-at="2025-09-08T13:02:33 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@479460a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.FormTests -->
      <class name="tests.WidgetsTests">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:02:33 IST" name="setup" finished-at="2025-09-08T13:02:39 IST" duration-ms="6123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.accessWidgets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="accessWidgets()[pri:1, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:02:39 IST" name="accessWidgets" finished-at="2025-09-08T13:02:39 IST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWidgets -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:02:39 IST" name="tearDown" finished-at="2025-09-08T13:02:40 IST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessWidgets status=SUCCESS method=WidgetsTests.accessWidgets()[pri:1, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:02:40 IST" name="setup" finished-at="2025-09-08T13:02:48 IST" duration-ms="8058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.Accordian()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Accordian()[pri:2, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:02:48 IST" name="Accordian" finished-at="2025-09-08T13:02:48 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accordian -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:02:48 IST" name="tearDown" finished-at="2025-09-08T13:02:48 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Accordian status=SUCCESS method=WidgetsTests.Accordian()[pri:2, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:02:48 IST" name="setup" finished-at="2025-09-08T13:03:04 IST" duration-ms="15453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AccessWhatis()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AccessWhatis()[pri:3, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:04 IST" name="AccessWhatis" finished-at="2025-09-08T13:03:04 IST" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhatis -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:04 IST" name="tearDown" finished-at="2025-09-08T13:03:05 IST" duration-ms="308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhatis status=SUCCESS method=WidgetsTests.AccessWhatis()[pri:3, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:05 IST" name="setup" finished-at="2025-09-08T13:03:29 IST" duration-ms="24072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AccessWhereDoes()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AccessWhereDoes()[pri:4, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:29 IST" name="AccessWhereDoes" finished-at="2025-09-08T13:03:29 IST" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhereDoes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:29 IST" name="tearDown" finished-at="2025-09-08T13:03:30 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhereDoes status=SUCCESS method=WidgetsTests.AccessWhereDoes()[pri:4, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:30 IST" name="setup" finished-at="2025-09-08T13:03:44 IST" duration-ms="14912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AccessWhyDoWe()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AccessWhyDoWe()[pri:5, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:44 IST" name="AccessWhyDoWe" finished-at="2025-09-08T13:03:46 IST" duration-ms="1110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhyDoWe -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:46 IST" name="tearDown" finished-at="2025-09-08T13:03:46 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhyDoWe status=SUCCESS method=WidgetsTests.AccessWhyDoWe()[pri:5, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:03:46 IST" name="setup" finished-at="2025-09-08T13:04:05 IST" duration-ms="18551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoComplete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoComplete()[pri:6, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:05 IST" name="AutoComplete" finished-at="2025-09-08T13:04:05 IST" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoComplete -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:05 IST" name="tearDown" finished-at="2025-09-08T13:04:05 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoComplete status=SUCCESS method=WidgetsTests.AutoComplete()[pri:6, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:05 IST" name="setup" finished-at="2025-09-08T13:04:11 IST" duration-ms="5675" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:11 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:04:12 IST" duration-ms="1512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='A', expectedColors=[Black, Magenta, Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:12 IST" name="tearDown" finished-at="2025-09-08T13:04:13 IST" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:13 IST" name="setup" finished-at="2025-09-08T13:04:29 IST" duration-ms="15750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:29 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:04:30 IST" duration-ms="1239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='B', expectedColors=[Blue, Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:30 IST" name="tearDown" finished-at="2025-09-08T13:04:30 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:30 IST" name="setup" finished-at="2025-09-08T13:04:47 IST" duration-ms="17067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:47 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:04:48 IST" duration-ms="797" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='C', expectedColors=[Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:48 IST" name="tearDown" finished-at="2025-09-08T13:04:48 IST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:04:48 IST" name="setup" finished-at="2025-09-08T13:05:08 IST" duration-ms="19571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:08 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:05:09 IST" duration-ms="1130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='D', expectedColors=[Red, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:09 IST" name="tearDown" finished-at="2025-09-08T13:05:10 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:10 IST" name="setup" finished-at="2025-09-08T13:05:27 IST" duration-ms="16980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:27 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:05:30 IST" duration-ms="3122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='E', expectedColors=[Red, Blue, Green, Yellow, Purple, White, Voilet, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:30 IST" name="tearDown" finished-at="2025-09-08T13:05:30 IST" duration-ms="713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:30 IST" name="setup" finished-at="2025-09-08T13:05:36 IST" duration-ms="5461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:36 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:05:37 IST" duration-ms="1602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='G', expectedColors=[Green, Indigo, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:37 IST" name="tearDown" finished-at="2025-09-08T13:05:38 IST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:38 IST" name="setup" finished-at="2025-09-08T13:05:43 IST" duration-ms="5667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:43 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:05:44 IST" duration-ms="921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='H', expectedColors=[White]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:44 IST" name="tearDown" finished-at="2025-09-08T13:05:45 IST" duration-ms="315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:45 IST" name="setup" finished-at="2025-09-08T13:05:51 IST" duration-ms="6480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:51 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:05:53 IST" duration-ms="1563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='I', expectedColors=[White, Voilet, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:53 IST" name="tearDown" finished-at="2025-09-08T13:05:53 IST" duration-ms="276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:53 IST" name="setup" finished-at="2025-09-08T13:05:59 IST" duration-ms="5958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:05:59 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:06:00 IST" duration-ms="939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='K', expectedColors=[Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:00 IST" name="tearDown" finished-at="2025-09-08T13:06:00 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:00 IST" name="setup" finished-at="2025-09-08T13:06:18 IST" duration-ms="17571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:18 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:06:20 IST" duration-ms="2063" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='L', expectedColors=[Blue, Yellow, Purple, Black, Voilet]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:20 IST" name="tearDown" finished-at="2025-09-08T13:06:20 IST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:20 IST" name="setup" finished-at="2025-09-08T13:06:35 IST" duration-ms="15021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:35 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:06:36 IST" duration-ms="748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='M', expectedColors=[Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:36 IST" name="tearDown" finished-at="2025-09-08T13:06:36 IST" duration-ms="303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:36 IST" name="setup" finished-at="2025-09-08T13:06:46 IST" duration-ms="9750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:46 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:06:47 IST" duration-ms="1296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='N', expectedColors=[Green, Indigo, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:47 IST" name="tearDown" finished-at="2025-09-08T13:06:48 IST" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:48 IST" name="setup" finished-at="2025-09-08T13:06:58 IST" duration-ms="10631" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:06:58 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:07:00 IST" duration-ms="1638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='O', expectedColors=[Yellow, Voilet, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:00 IST" name="tearDown" finished-at="2025-09-08T13:07:00 IST" duration-ms="492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:00 IST" name="setup" finished-at="2025-09-08T13:07:22 IST" duration-ms="21639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:22 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:07:23 IST" duration-ms="763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='P', expectedColors=[Purple]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:23 IST" name="tearDown" finished-at="2025-09-08T13:07:23 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:23 IST" name="setup" finished-at="2025-09-08T13:07:40 IST" duration-ms="16744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:40 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:07:41 IST" duration-ms="883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='Q', expectedColors=[Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:41 IST" name="tearDown" finished-at="2025-09-08T13:07:41 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:41 IST" name="setup" finished-at="2025-09-08T13:07:55 IST" duration-ms="14237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:55 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:07:57 IST" duration-ms="1499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='R', expectedColors=[Red, Green, Purple]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:57 IST" name="tearDown" finished-at="2025-09-08T13:07:57 IST" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:07:57 IST" name="setup" finished-at="2025-09-08T13:08:15 IST" duration-ms="17705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:15 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:08:17 IST" duration-ms="1655" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='T', expectedColors=[White, Voilet, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:17 IST" name="tearDown" finished-at="2025-09-08T13:08:17 IST" duration-ms="671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:17 IST" name="setup" finished-at="2025-09-08T13:08:25 IST" duration-ms="7638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:25 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:08:27 IST" duration-ms="2580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='U', expectedColors=[Blue, Purple, Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:27 IST" name="tearDown" finished-at="2025-09-08T13:08:28 IST" duration-ms="395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:28 IST" name="setup" finished-at="2025-09-08T13:08:44 IST" duration-ms="16597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:44 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:08:45 IST" duration-ms="917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='V', expectedColors=[Voilet]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:45 IST" name="tearDown" finished-at="2025-09-08T13:08:46 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:08:46 IST" name="setup" finished-at="2025-09-08T13:09:01 IST" duration-ms="15624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:01 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:09:03 IST" duration-ms="1355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='W', expectedColors=[Yellow, White]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:03 IST" name="tearDown" finished-at="2025-09-08T13:09:03 IST" duration-ms="414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:03 IST" name="setup" finished-at="2025-09-08T13:09:20 IST" duration-ms="17091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:20 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-08T13:09:21 IST" duration-ms="868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='Y', expectedColors=[Yellow]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:21 IST" name="tearDown" finished-at="2025-09-08T13:09:21 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:21 IST" name="setup" finished-at="2025-09-08T13:09:38 IST" duration-ms="17022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearchRemove(models.ColorSelectionData) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearchRemove(models.ColorSelectionData)[pri:8, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:38 IST" name="AutoCompleteSearchRemove" data-provider="ColorSelectionDataRemove" finished-at="2025-09-08T13:09:45 IST" duration-ms="6328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='E', expectedColors=[Green, Yellow]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearchRemove -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:45 IST" name="tearDown" finished-at="2025-09-08T13:09:45 IST" duration-ms="310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearchRemove status=SUCCESS method=WidgetsTests.AutoCompleteSearchRemove(models.ColorSelectionData)[pri:8, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:09:45 IST" name="setup" finished-at="2025-09-08T13:10:02 IST" duration-ms="17280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSingle(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSingle(java.lang.String,java.lang.String)[pri:9, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:10:02 IST" name="AutoCompleteSingle" data-provider="SingleColorData" finished-at="2025-09-08T13:10:05 IST" duration-ms="2425" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Green]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Color selection failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Color selection failed
at pages.WidgetsPage.selectColorSingle(WidgetsPage.java:443)
at pages.WidgetsPage.singleSearchAdd(WidgetsPage.java:411)
at tests.WidgetsTests.AutoCompleteSingle(WidgetsTests.java:168)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="auto-complete__option css-yt9ioa-option" id="react-select-3-option-2" tabindex="-1">...</div> is not clickable at point (566, 728). Other element would receive the click: <iframe frameborder="0" src="https://5a186045e694c0e32a88be57c21cf2bb.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html" id="google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" width="728" height="90" data-is-safeframe="true" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="private-state-token-redemption;attribution-reporting" aria-label="Advertisement" tabindex="0" data-google-container-id="1" style="border: 0px; vertical-align: bottom;" data-load-complete="true"></iframe>
  (Session info: chrome=137.0.7151.120)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c5b678be56a192504eaa77ea2491e9b3, clickElement {id=f.5262CC022A44570486E549D345A2C34D.d.6B532B98353E2E274DE423AD8705B856.e.49}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50272}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50272/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (c5b678be56a192504eaa77ea2491e9b3)] -> css selector: .auto-complete__option]
Session ID: c5b678be56a192504eaa77ea2491e9b3
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at pages.WidgetsPage.selectColorSingle(WidgetsPage.java:431)
... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSingle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:10:05 IST" name="tearDown" finished-at="2025-09-08T13:10:05 IST" duration-ms="648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSingle status=FAILURE method=WidgetsTests.AutoCompleteSingle(java.lang.String,java.lang.String)[pri:9, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:10:05 IST" name="setup" finished-at="2025-09-08T13:10:25 IST" duration-ms="19195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.SingleAddRemove(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SingleAddRemove(java.lang.String,java.lang.String)[pri:10, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:10:25 IST" name="SingleAddRemove" data-provider="SingleColorData" finished-at="2025-09-08T13:10:26 IST" duration-ms="1719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Green]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleAddRemove -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@7164ca4c]" started-at="2025-09-08T13:10:26 IST" name="tearDown" finished-at="2025-09-08T13:10:27 IST" duration-ms="687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SingleAddRemove status=SUCCESS method=WidgetsTests.SingleAddRemove(java.lang.String,java.lang.String)[pri:10, instance:tests.WidgetsTests@7164ca4c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.WidgetsTests -->
      <class name="tests.ElementsTests">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:41:16 IST" name="setup" finished-at="2025-09-08T12:41:21 IST" duration-ms="5515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ElementsCard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ElementsCard()[pri:1, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:41:21 IST" name="ElementsCard" finished-at="2025-09-08T12:41:21 IST" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ElementsCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:41:21 IST" name="tearDown" finished-at="2025-09-08T12:41:22 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ElementsCard status=SUCCESS method=ElementsTests.ElementsCard()[pri:1, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:41:23 IST" name="setup" finished-at="2025-09-08T12:41:42 IST" duration-ms="19631" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:41:42 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-08T12:41:44 IST" duration-ms="1584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', currentAddress='301 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='511 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:41:44 IST" name="tearDown" finished-at="2025-09-08T12:41:45 IST" duration-ms="911" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:41:45 IST" name="setup" finished-at="2025-09-08T12:42:03 IST" duration-ms="17951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:03 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-08T12:42:04 IST" duration-ms="1630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Gene', lastName='Femina', email='GFemina@demoqa.com', currentAddress='302 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='512 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:04 IST" name="tearDown" finished-at="2025-09-08T12:42:05 IST" duration-ms="793" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:05 IST" name="setup" finished-at="2025-09-08T12:42:15 IST" duration-ms="10318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:15 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-08T12:42:17 IST" duration-ms="1313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Bud', lastName='Wisem', email='BWisem@demoqa.com', currentAddress='303 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='513 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:17 IST" name="tearDown" finished-at="2025-09-08T12:42:17 IST" duration-ms="577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:17 IST" name="setup" finished-at="2025-09-08T12:42:26 IST" duration-ms="9065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:26 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-08T12:42:28 IST" duration-ms="1537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Tom', lastName='Boss', email='TBoss@demoqa.com', currentAddress='304 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='514 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:28 IST" name="tearDown" finished-at="2025-09-08T12:42:29 IST" duration-ms="592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:29 IST" name="setup" finished-at="2025-09-08T12:42:51 IST" duration-ms="22141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.CheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CheckBox()[pri:3, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:51 IST" name="CheckBox" finished-at="2025-09-08T12:42:51 IST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:51 IST" name="tearDown" finished-at="2025-09-08T12:42:52 IST" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckBox status=SUCCESS method=ElementsTests.CheckBox()[pri:3, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:42:52 IST" name="setup" finished-at="2025-09-08T12:43:27 IST" duration-ms="35758" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingHomeCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingHomeCheckBox()[pri:4, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:43:27 IST" name="SelectingHomeCheckBox" finished-at="2025-09-08T12:43:28 IST" duration-ms="685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingHomeCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:43:28 IST" name="tearDown" finished-at="2025-09-08T12:43:28 IST" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingHomeCheckBox status=SUCCESS method=ElementsTests.SelectingHomeCheckBox()[pri:4, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:43:28 IST" name="setup" finished-at="2025-09-08T12:43:41 IST" duration-ms="13157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingDesktopCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingDesktopCheckBox()[pri:5, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:43:41 IST" name="SelectingDesktopCheckBox" finished-at="2025-09-08T12:43:42 IST" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDesktopCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:43:42 IST" name="tearDown" finished-at="2025-09-08T12:43:43 IST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDesktopCheckBox status=SUCCESS method=ElementsTests.SelectingDesktopCheckBox()[pri:5, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:43:43 IST" name="setup" finished-at="2025-09-08T12:44:03 IST" duration-ms="20613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingNotesCommandsClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingNotesCommandsClick()[pri:6, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:03 IST" name="SelectingNotesCommandsClick" finished-at="2025-09-08T12:44:05 IST" duration-ms="2097" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span class="rct-checkbox">...</span> is not clickable at point (491, 632). Other element would receive the click: <div>...</div>
  (Session info: chrome=137.0.7151.120)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ad1c1d57faebe406849318c832ba4f1d, clickElement {id=f.8766C17943D5FE21984A5DCEF7213491.d.3ADC85F28D942F044879C0ECCD9CC9E5.e.41}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50605}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50605/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ad1c1d57faebe406849318c832ba4f1d)] -> xpath: //label[@for='tree-node-commands']//span[@class='rct-checkbox']]
Session ID: ad1c1d57faebe406849318c832ba4f1d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span class="rct-checkbox">...</span> is not clickable at point (491, 632). Other element would receive the click: <div>...</div>
  (Session info: chrome=137.0.7151.120)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ad1c1d57faebe406849318c832ba4f1d, clickElement {id=f.8766C17943D5FE21984A5DCEF7213491.d.3ADC85F28D942F044879C0ECCD9CC9E5.e.41}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50605}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50605/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ad1c1d57faebe406849318c832ba4f1d)] -> xpath: //label[@for='tree-node-commands']//span[@class='rct-checkbox']]
Session ID: ad1c1d57faebe406849318c832ba4f1d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy29.click(Unknown Source)
at pages.elementsPage.selectNotesCommands(elementsPage.java:465)
at tests.ElementsTests.SelectingNotesCommandsClick(ElementsTests.java:152)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingNotesCommandsClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:05 IST" name="tearDown" finished-at="2025-09-08T12:44:06 IST" duration-ms="641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingNotesCommandsClick status=FAILURE method=ElementsTests.SelectingNotesCommandsClick()[pri:6, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:06 IST" name="setup" finished-at="2025-09-08T12:44:14 IST" duration-ms="8323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingDocumentsCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingDocumentsCheckBox()[pri:7, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:14 IST" name="SelectingDocumentsCheckBox" finished-at="2025-09-08T12:44:15 IST" duration-ms="998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDocumentsCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:15 IST" name="tearDown" finished-at="2025-09-08T12:44:16 IST" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDocumentsCheckBox status=SUCCESS method=ElementsTests.SelectingDocumentsCheckBox()[pri:7, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:16 IST" name="setup" finished-at="2025-09-08T12:44:21 IST" duration-ms="5519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingWorkSpace()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingWorkSpace()[pri:8, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:21 IST" name="SelectingWorkSpace" finished-at="2025-09-08T12:44:22 IST" duration-ms="823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingWorkSpace -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:22 IST" name="tearDown" finished-at="2025-09-08T12:44:22 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingWorkSpace status=SUCCESS method=ElementsTests.SelectingWorkSpace()[pri:8, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:22 IST" name="setup" finished-at="2025-09-08T12:44:39 IST" duration-ms="16853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectReact()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectReact()[pri:9, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:39 IST" name="SelectReact" finished-at="2025-09-08T12:44:40 IST" duration-ms="1124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReact -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:40 IST" name="tearDown" finished-at="2025-09-08T12:44:41 IST" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectReact status=SUCCESS method=ElementsTests.SelectReact()[pri:9, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:41 IST" name="setup" finished-at="2025-09-08T12:44:46 IST" duration-ms="5252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectAngular()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectAngular()[pri:10, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:46 IST" name="SelectAngular" finished-at="2025-09-08T12:44:47 IST" duration-ms="915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectAngular -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:47 IST" name="tearDown" finished-at="2025-09-08T12:44:47 IST" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectAngular status=SUCCESS method=ElementsTests.SelectAngular()[pri:10, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:44:47 IST" name="setup" finished-at="2025-09-08T12:45:02 IST" duration-ms="14873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectVeu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectVeu()[pri:11, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:02 IST" name="SelectVeu" finished-at="2025-09-08T12:45:03 IST" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectVeu -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:03 IST" name="tearDown" finished-at="2025-09-08T12:45:04 IST" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectVeu status=SUCCESS method=ElementsTests.SelectVeu()[pri:11, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:04 IST" name="setup" finished-at="2025-09-08T12:45:09 IST" duration-ms="5075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectReactAnuglarVeu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectReactAnuglarVeu()[pri:12, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:09 IST" name="SelectReactAnuglarVeu" finished-at="2025-09-08T12:45:10 IST" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReactAnuglarVeu -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:10 IST" name="tearDown" finished-at="2025-09-08T12:45:10 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectReactAnuglarVeu status=SUCCESS method=ElementsTests.SelectReactAnuglarVeu()[pri:12, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:10 IST" name="setup" finished-at="2025-09-08T12:45:19 IST" duration-ms="8443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingOffice()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingOffice()[pri:13, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:19 IST" name="SelectingOffice" finished-at="2025-09-08T12:45:20 IST" duration-ms="795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingOffice -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:20 IST" name="tearDown" finished-at="2025-09-08T12:45:20 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingOffice status=SUCCESS method=ElementsTests.SelectingOffice()[pri:13, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:20 IST" name="setup" finished-at="2025-09-08T12:45:26 IST" duration-ms="5832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectPublic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectPublic()[pri:14, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:26 IST" name="SelectPublic" finished-at="2025-09-08T12:45:27 IST" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectPublic -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:27 IST" name="tearDown" finished-at="2025-09-08T12:45:27 IST" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectPublic status=SUCCESS method=ElementsTests.SelectPublic()[pri:14, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:45:27 IST" name="setup" finished-at="2025-09-08T12:46:03 IST" duration-ms="35518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectPrivate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectPrivate()[pri:15, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:03 IST" name="SelectPrivate" finished-at="2025-09-08T12:46:04 IST" duration-ms="948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectPrivate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:04 IST" name="tearDown" finished-at="2025-09-08T12:46:04 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectPrivate status=SUCCESS method=ElementsTests.SelectPrivate()[pri:15, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:04 IST" name="setup" finished-at="2025-09-08T12:46:25 IST" duration-ms="20956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectClassified()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectClassified()[pri:16, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:25 IST" name="SelectClassified" finished-at="2025-09-08T12:46:26 IST" duration-ms="1452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectClassified -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:26 IST" name="tearDown" finished-at="2025-09-08T12:46:27 IST" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectClassified status=SUCCESS method=ElementsTests.SelectClassified()[pri:16, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:27 IST" name="setup" finished-at="2025-09-08T12:46:44 IST" duration-ms="17206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectGeneral()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectGeneral()[pri:17, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:44 IST" name="SelectGeneral" finished-at="2025-09-08T12:46:45 IST" duration-ms="1157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectGeneral -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:45 IST" name="tearDown" finished-at="2025-09-08T12:46:46 IST" duration-ms="332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectGeneral status=SUCCESS method=ElementsTests.SelectGeneral()[pri:17, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:46:46 IST" name="setup" finished-at="2025-09-08T12:47:04 IST" duration-ms="18727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectOfficeAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectOfficeAll()[pri:18, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:04 IST" name="SelectOfficeAll" finished-at="2025-09-08T12:47:06 IST" duration-ms="1700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectOfficeAll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:06 IST" name="tearDown" finished-at="2025-09-08T12:47:06 IST" duration-ms="483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectOfficeAll status=SUCCESS method=ElementsTests.SelectOfficeAll()[pri:18, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:06 IST" name="setup" finished-at="2025-09-08T12:47:12 IST" duration-ms="5345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingDownloads()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingDownloads()[pri:19, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:12 IST" name="SelectingDownloads" finished-at="2025-09-08T12:47:13 IST" duration-ms="908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDownloads -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:13 IST" name="tearDown" finished-at="2025-09-08T12:47:13 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDownloads status=SUCCESS method=ElementsTests.SelectingDownloads()[pri:19, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:13 IST" name="setup" finished-at="2025-09-08T12:47:19 IST" duration-ms="6174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingWordFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingWordFile()[pri:20, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:19 IST" name="SelectingWordFile" finished-at="2025-09-08T12:47:20 IST" duration-ms="946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingWordFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:20 IST" name="tearDown" finished-at="2025-09-08T12:47:20 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingWordFile status=SUCCESS method=ElementsTests.SelectingWordFile()[pri:20, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:20 IST" name="setup" finished-at="2025-09-08T12:47:42 IST" duration-ms="21534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingExcelFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingExcelFile()[pri:21, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:42 IST" name="SelectingExcelFile" finished-at="2025-09-08T12:47:43 IST" duration-ms="829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingExcelFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:43 IST" name="tearDown" finished-at="2025-09-08T12:47:43 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingExcelFile status=SUCCESS method=ElementsTests.SelectingExcelFile()[pri:21, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:43 IST" name="setup" finished-at="2025-09-08T12:47:49 IST" duration-ms="5967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingAllFiles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingAllFiles()[pri:22, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:49 IST" name="SelectingAllFiles" finished-at="2025-09-08T12:47:50 IST" duration-ms="1257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingAllFiles -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:50 IST" name="tearDown" finished-at="2025-09-08T12:47:51 IST" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingAllFiles status=SUCCESS method=ElementsTests.SelectingAllFiles()[pri:22, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:47:51 IST" name="setup" finished-at="2025-09-08T12:48:08 IST" duration-ms="17340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.clickRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="clickRadioButton()[pri:23, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:08 IST" name="clickRadioButton" finished-at="2025-09-08T12:48:09 IST" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:09 IST" name="tearDown" finished-at="2025-09-08T12:48:09 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickRadioButton status=SUCCESS method=ElementsTests.clickRadioButton()[pri:23, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:09 IST" name="setup" finished-at="2025-09-08T12:48:26 IST" duration-ms="17130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectYesRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectYesRadioButton()[pri:24, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:26 IST" name="SelectYesRadioButton" finished-at="2025-09-08T12:48:27 IST" duration-ms="607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectYesRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:27 IST" name="tearDown" finished-at="2025-09-08T12:48:27 IST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectYesRadioButton status=SUCCESS method=ElementsTests.SelectYesRadioButton()[pri:24, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:27 IST" name="setup" finished-at="2025-09-08T12:48:33 IST" duration-ms="5640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectImpressiveRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectImpressiveRadioButton()[pri:25, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:33 IST" name="SelectImpressiveRadioButton" finished-at="2025-09-08T12:48:33 IST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectImpressiveRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:33 IST" name="tearDown" finished-at="2025-09-08T12:48:34 IST" duration-ms="279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectImpressiveRadioButton status=SUCCESS method=ElementsTests.SelectImpressiveRadioButton()[pri:25, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:34 IST" name="setup" finished-at="2025-09-08T12:48:42 IST" duration-ms="8300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.WebTablesClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="WebTablesClick()[pri:26, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:42 IST" name="WebTablesClick" finished-at="2025-09-08T12:48:42 IST" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebTablesClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:42 IST" name="tearDown" finished-at="2025-09-08T12:48:43 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WebTablesClick status=SUCCESS method=ElementsTests.WebTablesClick()[pri:26, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:43 IST" name="setup" finished-at="2025-09-08T12:48:51 IST" duration-ms="8477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:51 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-08T12:48:53 IST" duration-ms="2124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:53 IST" name="tearDown" finished-at="2025-09-08T12:48:54 IST" duration-ms="354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:48:54 IST" name="setup" finished-at="2025-09-08T12:49:12 IST" duration-ms="18341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:49:12 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-08T12:49:14 IST" duration-ms="2061" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Gene', lastName='Femina', email='GFemina@demoqa.com', salary=180000, age=300, department='Finance'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:49:14 IST" name="tearDown" finished-at="2025-09-08T12:49:14 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:49:14 IST" name="setup" finished-at="2025-09-08T12:49:52 IST" duration-ms="37532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:49:52 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-08T12:49:54 IST" duration-ms="2537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Bud', lastName='Wisem', email='BWisem@demoqa.com', salary=150000, age=400, department='Medicine'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:49:54 IST" name="tearDown" finished-at="2025-09-08T12:49:55 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:49:55 IST" name="setup" finished-at="2025-09-08T12:50:00 IST" duration-ms="5587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:00 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-08T12:50:02 IST" duration-ms="2169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tom', lastName='Boss', email='TBoss@demoqa.com', salary=190000, age=420, department='Recreation'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:02 IST" name="tearDown" finished-at="2025-09-08T12:50:03 IST" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:03 IST" name="setup" finished-at="2025-09-08T12:50:28 IST" duration-ms="24978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableAddSearch(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableAddSearch(models.WebTableUser)[pri:28, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:28 IST" name="webTableAddSearch" data-provider="WTFormDataEdit" finished-at="2025-09-08T12:50:31 IST" duration-ms="2690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:31 IST" name="tearDown" finished-at="2025-09-08T12:50:31 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddSearch status=SUCCESS method=ElementsTests.webTableAddSearch(models.WebTableUser)[pri:28, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:31 IST" name="setup" finished-at="2025-09-08T12:50:40 IST" duration-ms="8717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableAddEditFirstName(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableAddEditFirstName(models.WebTableUser)[pri:29, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:40 IST" name="webTableAddEditFirstName" data-provider="WTFormDataEdit" finished-at="2025-09-08T12:50:43 IST" duration-ms="3641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tonny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddEditFirstName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:43 IST" name="tearDown" finished-at="2025-09-08T12:50:44 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddEditFirstName status=SUCCESS method=ElementsTests.webTableAddEditFirstName(models.WebTableUser)[pri:29, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:50:44 IST" name="setup" finished-at="2025-09-08T12:51:02 IST" duration-ms="18402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableAddSearchEdit(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableAddSearchEdit(models.WebTableUser)[pri:30, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:02 IST" name="webTableAddSearchEdit" data-provider="WTFormDataEdit" finished-at="2025-09-08T12:51:06 IST" duration-ms="3939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tonny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddSearchEdit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:06 IST" name="tearDown" finished-at="2025-09-08T12:51:06 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddSearchEdit status=SUCCESS method=ElementsTests.webTableAddSearchEdit(models.WebTableUser)[pri:30, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:06 IST" name="setup" finished-at="2025-09-08T12:51:12 IST" duration-ms="5786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableDeleteUser(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableDeleteUser(models.WebTableUser)[pri:31, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:12 IST" name="webTableDeleteUser" data-provider="WTFormDataEdit" finished-at="2025-09-08T12:51:16 IST" duration-ms="3453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableDeleteUser -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:16 IST" name="tearDown" finished-at="2025-09-08T12:51:16 IST" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableDeleteUser status=SUCCESS method=ElementsTests.webTableDeleteUser(models.WebTableUser)[pri:31, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:16 IST" name="setup" finished-at="2025-09-08T12:51:22 IST" duration-ms="5925" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.testAddAllUsersFromExcel() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddAllUsersFromExcel()[pri:32, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:22 IST" name="testAddAllUsersFromExcel" finished-at="2025-09-08T12:51:29 IST" duration-ms="6853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllUsersFromExcel -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:29 IST" name="tearDown" finished-at="2025-09-08T12:51:29 IST" duration-ms="594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddAllUsersFromExcel status=SUCCESS method=ElementsTests.testAddAllUsersFromExcel()[pri:32, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:29 IST" name="setup" finished-at="2025-09-08T12:51:52 IST" duration-ms="23049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.testAddAllUsersSearchEdit() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddAllUsersSearchEdit()[pri:33, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:51:52 IST" name="testAddAllUsersSearchEdit" finished-at="2025-09-08T12:52:01 IST" duration-ms="8191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllUsersSearchEdit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:01 IST" name="tearDown" finished-at="2025-09-08T12:52:01 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddAllUsersSearchEdit status=SUCCESS method=ElementsTests.testAddAllUsersSearchEdit()[pri:33, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:01 IST" name="setup" finished-at="2025-09-08T12:52:11 IST" duration-ms="9987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.EditSalaryDepartment() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="EditSalaryDepartment()[pri:34, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:11 IST" name="EditSalaryDepartment" finished-at="2025-09-08T12:52:23 IST" duration-ms="12281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditSalaryDepartment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:23 IST" name="tearDown" finished-at="2025-09-08T12:52:24 IST" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditSalaryDepartment status=SUCCESS method=ElementsTests.EditSalaryDepartment()[pri:34, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:24 IST" name="setup" finished-at="2025-09-08T12:52:46 IST" duration-ms="22187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.Buttons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Buttons()[pri:35, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:46 IST" name="Buttons" finished-at="2025-09-08T12:52:46 IST" duration-ms="450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Buttons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:46 IST" name="tearDown" finished-at="2025-09-08T12:52:47 IST" duration-ms="397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Buttons status=SUCCESS method=ElementsTests.Buttons()[pri:35, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:47 IST" name="setup" finished-at="2025-09-08T12:52:53 IST" duration-ms="6244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.DoubleClickButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="DoubleClickButtons()[pri:36, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:53 IST" name="DoubleClickButtons" finished-at="2025-09-08T12:52:54 IST" duration-ms="697" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[@id='doubleClickMessage']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [55fe61accf4a72f97e23a713fc9c822d, findElement {value=//p[@id='doubleClickMessage'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56142}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56142/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 55fe61accf4a72f97e23a713fc9c822d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[@id='doubleClickMessage']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [55fe61accf4a72f97e23a713fc9c822d, findElement {value=//p[@id='doubleClickMessage'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56142}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56142/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 55fe61accf4a72f97e23a713fc9c822d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at pages.elementsPage.DoubleClickbtn(elementsPage.java:934)
at tests.ElementsTests.DoubleClickButtons(ElementsTests.java:771)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleClickButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:54 IST" name="tearDown" finished-at="2025-09-08T12:52:54 IST" duration-ms="535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DoubleClickButtons status=FAILURE method=ElementsTests.DoubleClickButtons()[pri:36, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:52:54 IST" name="setup" finished-at="2025-09-08T12:53:31 IST" duration-ms="36987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.RightClickButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="RightClickButton()[pri:37, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:53:31 IST" name="RightClickButton" finished-at="2025-09-08T12:53:32 IST" duration-ms="779" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[@id='rightClickMessage']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2b13f56d5481759d7c389b223b950919, findElement {value=//p[@id='rightClickMessage'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56265}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56265/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2b13f56d5481759d7c389b223b950919]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[@id='rightClickMessage']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2b13f56d5481759d7c389b223b950919, findElement {value=//p[@id='rightClickMessage'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56265}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56265/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2b13f56d5481759d7c389b223b950919
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy29.getText(Unknown Source)
at pages.elementsPage.RightClickBtn(elementsPage.java:954)
at tests.ElementsTests.RightClickButton(ElementsTests.java:785)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RightClickButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:53:32 IST" name="tearDown" finished-at="2025-09-08T12:53:33 IST" duration-ms="677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RightClickButton status=FAILURE method=ElementsTests.RightClickButton()[pri:37, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:53:33 IST" name="setup" finished-at="2025-09-08T12:53:51 IST" duration-ms="18355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickMeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickMeButton()[pri:38, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:53:51 IST" name="ClickMeButton" finished-at="2025-09-08T12:53:52 IST" duration-ms="648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMeButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:53:52 IST" name="tearDown" finished-at="2025-09-08T12:53:52 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickMeButton status=SUCCESS method=ElementsTests.ClickMeButton()[pri:38, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:53:52 IST" name="setup" finished-at="2025-09-08T12:54:06 IST" duration-ms="14554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickAllButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAllButtons()[pri:39, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:06 IST" name="ClickAllButtons" finished-at="2025-09-08T12:54:16 IST" duration-ms="10016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAllButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:16 IST" name="tearDown" finished-at="2025-09-08T12:54:17 IST" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAllButtons status=SUCCESS method=ElementsTests.ClickAllButtons()[pri:39, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:17 IST" name="setup" finished-at="2025-09-08T12:54:37 IST" duration-ms="20206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickLinks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickLinks()[pri:40, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:37 IST" name="ClickLinks" finished-at="2025-09-08T12:54:38 IST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLinks -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:38 IST" name="tearDown" finished-at="2025-09-08T12:54:38 IST" duration-ms="686" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLinks status=SUCCESS method=ElementsTests.ClickLinks()[pri:40, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:38 IST" name="setup" finished-at="2025-09-08T12:54:46 IST" duration-ms="7985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickHomeLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickHomeLink()[pri:41, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:46 IST" name="ClickHomeLink" finished-at="2025-09-08T12:54:47 IST" duration-ms="797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickHomeLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:47 IST" name="tearDown" finished-at="2025-09-08T12:54:47 IST" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickHomeLink status=SUCCESS method=ElementsTests.ClickHomeLink()[pri:41, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:54:47 IST" name="setup" finished-at="2025-09-08T12:55:06 IST" duration-ms="18716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickDynamicHomeLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickDynamicHomeLink()[pri:42, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:06 IST" name="ClickDynamicHomeLink" finished-at="2025-09-08T12:55:07 IST" duration-ms="643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDynamicHomeLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:07 IST" name="tearDown" finished-at="2025-09-08T12:55:07 IST" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDynamicHomeLink status=SUCCESS method=ElementsTests.ClickDynamicHomeLink()[pri:42, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:07 IST" name="setup" finished-at="2025-09-08T12:55:24 IST" duration-ms="16508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickCreatedAPILink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickCreatedAPILink()[pri:43, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:24 IST" name="ClickCreatedAPILink" finished-at="2025-09-08T12:55:24 IST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickCreatedAPILink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:24 IST" name="tearDown" finished-at="2025-09-08T12:55:24 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickCreatedAPILink status=SUCCESS method=ElementsTests.ClickCreatedAPILink()[pri:43, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:24 IST" name="setup" finished-at="2025-09-08T12:55:30 IST" duration-ms="5120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickNoContentLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickNoContentLink()[pri:44, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:30 IST" name="ClickNoContentLink" finished-at="2025-09-08T12:55:30 IST" duration-ms="849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNoContentLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:30 IST" name="tearDown" finished-at="2025-09-08T12:55:31 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNoContentLink status=SUCCESS method=ElementsTests.ClickNoContentLink()[pri:44, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:31 IST" name="setup" finished-at="2025-09-08T12:55:36 IST" duration-ms="5075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickMovedLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickMovedLink()[pri:45, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:36 IST" name="ClickMovedLink" finished-at="2025-09-08T12:55:37 IST" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMovedLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:37 IST" name="tearDown" finished-at="2025-09-08T12:55:37 IST" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickMovedLink status=SUCCESS method=ElementsTests.ClickMovedLink()[pri:45, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:37 IST" name="setup" finished-at="2025-09-08T12:55:42 IST" duration-ms="5327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickBadRequestLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickBadRequestLink()[pri:46, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:42 IST" name="ClickBadRequestLink" finished-at="2025-09-08T12:55:43 IST" duration-ms="651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBadRequestLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:43 IST" name="tearDown" finished-at="2025-09-08T12:55:43 IST" duration-ms="315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickBadRequestLink status=SUCCESS method=ElementsTests.ClickBadRequestLink()[pri:46, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:55:43 IST" name="setup" finished-at="2025-09-08T12:56:05 IST" duration-ms="21589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickUnauthorizedLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickUnauthorizedLink()[pri:47, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:05 IST" name="ClickUnauthorizedLink" finished-at="2025-09-08T12:56:05 IST" duration-ms="570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickUnauthorizedLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:05 IST" name="tearDown" finished-at="2025-09-08T12:56:06 IST" duration-ms="929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickUnauthorizedLink status=SUCCESS method=ElementsTests.ClickUnauthorizedLink()[pri:47, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:06 IST" name="setup" finished-at="2025-09-08T12:56:16 IST" duration-ms="9269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickForbiddenLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickForbiddenLink()[pri:48, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:16 IST" name="ClickForbiddenLink" finished-at="2025-09-08T12:56:16 IST" duration-ms="725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickForbiddenLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:16 IST" name="tearDown" finished-at="2025-09-08T12:56:17 IST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickForbiddenLink status=SUCCESS method=ElementsTests.ClickForbiddenLink()[pri:48, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:17 IST" name="setup" finished-at="2025-09-08T12:56:23 IST" duration-ms="6651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickNotFoundLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickNotFoundLink()[pri:49, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:23 IST" name="ClickNotFoundLink" finished-at="2025-09-08T12:56:24 IST" duration-ms="688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNotFoundLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:24 IST" name="tearDown" finished-at="2025-09-08T12:56:24 IST" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNotFoundLink status=SUCCESS method=ElementsTests.ClickNotFoundLink()[pri:49, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:24 IST" name="setup" finished-at="2025-09-08T12:56:31 IST" duration-ms="6470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickAllLinks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAllLinks()[pri:50, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:31 IST" name="ClickAllLinks" finished-at="2025-09-08T12:56:57 IST" duration-ms="26218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAllLinks -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:57 IST" name="tearDown" finished-at="2025-09-08T12:56:57 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAllLinks status=SUCCESS method=ElementsTests.ClickAllLinks()[pri:50, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:56:57 IST" name="setup" finished-at="2025-09-08T12:57:03 IST" duration-ms="6122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickBrokenLinksImages()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickBrokenLinksImages()[pri:51, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:03 IST" name="ClickBrokenLinksImages" finished-at="2025-09-08T12:57:04 IST" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBrokenLinksImages -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:04 IST" name="tearDown" finished-at="2025-09-08T12:57:04 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickBrokenLinksImages status=SUCCESS method=ElementsTests.ClickBrokenLinksImages()[pri:51, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:04 IST" name="setup" finished-at="2025-09-08T12:57:10 IST" duration-ms="5641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.GetValidImage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetValidImage()[pri:52, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:10 IST" name="GetValidImage" finished-at="2025-09-08T12:57:11 IST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetValidImage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:11 IST" name="tearDown" finished-at="2025-09-08T12:57:11 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetValidImage status=SUCCESS method=ElementsTests.GetValidImage()[pri:52, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:11 IST" name="setup" finished-at="2025-09-08T12:57:24 IST" duration-ms="13468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.GetBrokenImage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetBrokenImage()[pri:53, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:24 IST" name="GetBrokenImage" finished-at="2025-09-08T12:57:25 IST" duration-ms="636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetBrokenImage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:25 IST" name="tearDown" finished-at="2025-09-08T12:57:25 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetBrokenImage status=SUCCESS method=ElementsTests.GetBrokenImage()[pri:53, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:25 IST" name="setup" finished-at="2025-09-08T12:57:43 IST" duration-ms="17328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.BrokenLinksBrokenlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="BrokenLinksBrokenlink()[pri:54, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:43 IST" name="BrokenLinksBrokenlink" finished-at="2025-09-08T12:57:53 IST" duration-ms="9930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrokenLinksBrokenlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:53 IST" name="tearDown" finished-at="2025-09-08T12:57:53 IST" duration-ms="244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrokenLinksBrokenlink status=SUCCESS method=ElementsTests.BrokenLinksBrokenlink()[pri:54, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:57:53 IST" name="setup" finished-at="2025-09-08T12:58:22 IST" duration-ms="29330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.BrokenLinksValidlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="BrokenLinksValidlink()[pri:54, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:22 IST" name="BrokenLinksValidlink" finished-at="2025-09-08T12:58:24 IST" duration-ms="2198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrokenLinksValidlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:24 IST" name="tearDown" finished-at="2025-09-08T12:58:25 IST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrokenLinksValidlink status=SUCCESS method=ElementsTests.BrokenLinksValidlink()[pri:54, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:25 IST" name="setup" finished-at="2025-09-08T12:58:30 IST" duration-ms="5339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.UploadDownloadlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="UploadDownloadlink()[pri:55, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:30 IST" name="UploadDownloadlink" finished-at="2025-09-08T12:58:31 IST" duration-ms="556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadDownloadlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:31 IST" name="tearDown" finished-at="2025-09-08T12:58:31 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UploadDownloadlink status=SUCCESS method=ElementsTests.UploadDownloadlink()[pri:55, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:31 IST" name="setup" finished-at="2025-09-08T12:58:54 IST" duration-ms="22591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.Downloadbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Downloadbtn()[pri:56, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:54 IST" name="Downloadbtn" finished-at="2025-09-08T12:58:54 IST" duration-ms="807" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[File was not downloaded successfully. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: File was not downloaded successfully. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.elementsPage.DownloadFile(elementsPage.java:1202)
at tests.ElementsTests.Downloadbtn(ElementsTests.java:1121)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Downloadbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:54 IST" name="tearDown" finished-at="2025-09-08T12:58:55 IST" duration-ms="715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Downloadbtn status=FAILURE method=ElementsTests.Downloadbtn()[pri:56, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:58:55 IST" name="setup" finished-at="2025-09-08T12:59:11 IST" duration-ms="15393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.Uploadbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Uploadbtn()[pri:57, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:11 IST" name="Uploadbtn" finished-at="2025-09-08T12:59:11 IST" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Uploadbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:11 IST" name="tearDown" finished-at="2025-09-08T12:59:12 IST" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Uploadbtn status=SUCCESS method=ElementsTests.Uploadbtn()[pri:57, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:12 IST" name="setup" finished-at="2025-09-08T12:59:21 IST" duration-ms="8845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.DynamicPropertiesbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="DynamicPropertiesbtn()[pri:58, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:21 IST" name="DynamicPropertiesbtn" finished-at="2025-09-08T12:59:21 IST" duration-ms="544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DynamicPropertiesbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:21 IST" name="tearDown" finished-at="2025-09-08T12:59:21 IST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DynamicPropertiesbtn status=SUCCESS method=ElementsTests.DynamicPropertiesbtn()[pri:58, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:21 IST" name="setup" finished-at="2025-09-08T12:59:28 IST" duration-ms="6364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ColorChangebtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ColorChangebtn()[pri:59, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:28 IST" name="ColorChangebtn" finished-at="2025-09-08T12:59:29 IST" duration-ms="929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ColorChangebtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:29 IST" name="tearDown" finished-at="2025-09-08T12:59:29 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ColorChangebtn status=SUCCESS method=ElementsTests.ColorChangebtn()[pri:59, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:29 IST" name="setup" finished-at="2025-09-08T12:59:35 IST" duration-ms="5857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.WillEnablebtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="WillEnablebtn()[pri:59, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:35 IST" name="WillEnablebtn" finished-at="2025-09-08T12:59:41 IST" duration-ms="5727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WillEnablebtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:41 IST" name="tearDown" finished-at="2025-09-08T12:59:41 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WillEnablebtn status=SUCCESS method=ElementsTests.WillEnablebtn()[pri:59, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:41 IST" name="setup" finished-at="2025-09-08T12:59:46 IST" duration-ms="5380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.VisibleAfterbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VisibleAfterbtn()[pri:60, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:46 IST" name="VisibleAfterbtn" finished-at="2025-09-08T12:59:52 IST" duration-ms="5965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VisibleAfterbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68df9280]" started-at="2025-09-08T12:59:52 IST" name="tearDown" finished-at="2025-09-08T12:59:53 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VisibleAfterbtn status=SUCCESS method=ElementsTests.VisibleAfterbtn()[pri:60, instance:tests.ElementsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ElementsTests -->
      <class name="tests.AlertsFramesWindowsTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:01 IST" name="setupReport" finished-at="2025-09-08T12:34:01 IST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:01 IST" name="setup" finished-at="2025-09-08T12:34:25 IST" duration-ms="23660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.accessAlertsFrameWindows()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="accessAlertsFrameWindows()[pri:1, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:25 IST" name="accessAlertsFrameWindows" finished-at="2025-09-08T12:34:25 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAlertsFrameWindows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:25 IST" name="tearDown" finished-at="2025-09-08T12:34:25 IST" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessAlertsFrameWindows status=SUCCESS method=AlertsFramesWindowsTests.accessAlertsFrameWindows()[pri:1, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:25 IST" name="setup" finished-at="2025-09-08T12:34:43 IST" duration-ms="17926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindows()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindows()[pri:2, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:43 IST" name="browserWindows" finished-at="2025-09-08T12:34:43 IST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:43 IST" name="tearDown" finished-at="2025-09-08T12:34:44 IST" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindows status=SUCCESS method=AlertsFramesWindowsTests.browserWindows()[pri:2, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:34:44 IST" name="setup" finished-at="2025-09-08T12:35:14 IST" duration-ms="30699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindowsNewTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindowsNewTab()[pri:3, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:35:14 IST" name="browserWindowsNewTab" finished-at="2025-09-08T12:35:15 IST" duration-ms="885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewTab -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:35:15 IST" name="tearDown" finished-at="2025-09-08T12:35:16 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewTab status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewTab()[pri:3, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:35:16 IST" name="setup" finished-at="2025-09-08T12:35:52 IST" duration-ms="35986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindowsNewWindow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindowsNewWindow()[pri:4, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:35:52 IST" name="browserWindowsNewWindow" finished-at="2025-09-08T12:35:52 IST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewWindow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:35:52 IST" name="tearDown" finished-at="2025-09-08T12:35:53 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewWindow status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewWindow()[pri:4, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:35:53 IST" name="setup" finished-at="2025-09-08T12:36:14 IST" duration-ms="21147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindowsNewWindowMsg()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindowsNewWindowMsg()[pri:5, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:14 IST" name="browserWindowsNewWindowMsg" finished-at="2025-09-08T12:36:15 IST" duration-ms="897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewWindowMsg -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:15 IST" name="tearDown" finished-at="2025-09-08T12:36:15 IST" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewWindowMsg status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewWindowMsg()[pri:5, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:15 IST" name="setup" finished-at="2025-09-08T12:36:24 IST" duration-ms="9016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickAlerts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAlerts()[pri:6, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:24 IST" name="ClickAlerts" finished-at="2025-09-08T12:36:25 IST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAlerts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:25 IST" name="tearDown" finished-at="2025-09-08T12:36:25 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAlerts status=SUCCESS method=AlertsFramesWindowsTests.ClickAlerts()[pri:6, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:25 IST" name="setup" finished-at="2025-09-08T12:36:51 IST" duration-ms="26483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickToSeeAlerts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickToSeeAlerts()[pri:7, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:51 IST" name="ClickToSeeAlerts" finished-at="2025-09-08T12:36:57 IST" duration-ms="5746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickToSeeAlerts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:57 IST" name="tearDown" finished-at="2025-09-08T12:36:58 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickToSeeAlerts status=SUCCESS method=AlertsFramesWindowsTests.ClickToSeeAlerts()[pri:7, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:36:58 IST" name="setup" finished-at="2025-09-08T12:37:20 IST" duration-ms="22632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickAcceptConfirmationBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAcceptConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:37:20 IST" name="ClickAcceptConfirmationBox" finished-at="2025-09-08T12:37:21 IST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAcceptConfirmationBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:37:21 IST" name="tearDown" finished-at="2025-09-08T12:37:21 IST" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAcceptConfirmationBox status=SUCCESS method=AlertsFramesWindowsTests.ClickAcceptConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:37:21 IST" name="setup" finished-at="2025-09-08T12:37:48 IST" duration-ms="27195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickDenyConfirmationBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickDenyConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:37:48 IST" name="ClickDenyConfirmationBox" finished-at="2025-09-08T12:37:49 IST" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDenyConfirmationBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:37:49 IST" name="tearDown" finished-at="2025-09-08T12:37:49 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDenyConfirmationBox status=SUCCESS method=AlertsFramesWindowsTests.ClickDenyConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:37:49 IST" name="setup" finished-at="2025-09-08T12:38:05 IST" duration-ms="15939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickPromptBoxFill()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickPromptBoxFill()[pri:9, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:05 IST" name="ClickPromptBoxFill" finished-at="2025-09-08T12:38:06 IST" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickPromptBoxFill -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:06 IST" name="tearDown" finished-at="2025-09-08T12:38:06 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickPromptBoxFill status=SUCCESS method=AlertsFramesWindowsTests.ClickPromptBoxFill()[pri:9, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:06 IST" name="setup" finished-at="2025-09-08T12:38:43 IST" duration-ms="37151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickFrames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickFrames()[pri:10, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:43 IST" name="ClickFrames" finished-at="2025-09-08T12:38:44 IST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickFrames -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:44 IST" name="tearDown" finished-at="2025-09-08T12:38:44 IST" duration-ms="291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickFrames status=SUCCESS method=AlertsFramesWindowsTests.ClickFrames()[pri:10, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:44 IST" name="setup" finished-at="2025-09-08T12:38:57 IST" duration-ms="13349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetFrame1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetFrame1()[pri:11, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:57 IST" name="GetFrame1" finished-at="2025-09-08T12:38:58 IST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFrame1 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:58 IST" name="tearDown" finished-at="2025-09-08T12:38:58 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFrame1 status=SUCCESS method=AlertsFramesWindowsTests.GetFrame1()[pri:11, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:38:58 IST" name="setup" finished-at="2025-09-08T12:39:15 IST" duration-ms="16447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetFrame2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetFrame2()[pri:12, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:15 IST" name="GetFrame2" finished-at="2025-09-08T12:39:16 IST" duration-ms="1240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFrame2 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:16 IST" name="tearDown" finished-at="2025-09-08T12:39:16 IST" duration-ms="342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFrame2 status=SUCCESS method=AlertsFramesWindowsTests.GetFrame2()[pri:12, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:16 IST" name="setup" finished-at="2025-09-08T12:39:44 IST" duration-ms="27799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickModalDialogs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickModalDialogs()[pri:13, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:44 IST" name="ClickModalDialogs" finished-at="2025-09-08T12:39:44 IST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickModalDialogs -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:44 IST" name="tearDown" finished-at="2025-09-08T12:39:46 IST" duration-ms="1335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickModalDialogs status=SUCCESS method=AlertsFramesWindowsTests.ClickModalDialogs()[pri:13, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:46 IST" name="setup" finished-at="2025-09-08T12:39:56 IST" duration-ms="10496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickNestedFrames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickNestedFrames()[pri:13, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:56 IST" name="ClickNestedFrames" finished-at="2025-09-08T12:39:57 IST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNestedFrames -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:57 IST" name="tearDown" finished-at="2025-09-08T12:39:57 IST" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNestedFrames status=SUCCESS method=AlertsFramesWindowsTests.ClickNestedFrames()[pri:13, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:39:57 IST" name="setup" finished-at="2025-09-08T12:40:15 IST" duration-ms="18132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickLargeModal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickLargeModal()[pri:14, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:15 IST" name="ClickLargeModal" finished-at="2025-09-08T12:40:16 IST" duration-ms="823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLargeModal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:16 IST" name="tearDown" finished-at="2025-09-08T12:40:16 IST" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLargeModal status=SUCCESS method=AlertsFramesWindowsTests.ClickLargeModal()[pri:14, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:16 IST" name="setup" finished-at="2025-09-08T12:40:35 IST" duration-ms="18338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickSmallModal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickSmallModal()[pri:14, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:35 IST" name="ClickSmallModal" finished-at="2025-09-08T12:40:35 IST" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSmallModal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:35 IST" name="tearDown" finished-at="2025-09-08T12:40:36 IST" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickSmallModal status=SUCCESS method=AlertsFramesWindowsTests.ClickSmallModal()[pri:14, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:36 IST" name="setup" finished-at="2025-09-08T12:40:54 IST" duration-ms="17846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetParentFrame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetParentFrame()[pri:14, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:54 IST" name="GetParentFrame" finished-at="2025-09-08T12:40:57 IST" duration-ms="3455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetParentFrame -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:57 IST" name="tearDown" finished-at="2025-09-08T12:40:57 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetParentFrame status=SUCCESS method=AlertsFramesWindowsTests.GetParentFrame()[pri:14, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:40:57 IST" name="setup" finished-at="2025-09-08T12:41:15 IST" duration-ms="17167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetChildFrame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetChildFrame()[pri:15, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:41:15 IST" name="GetChildFrame" finished-at="2025-09-08T12:41:15 IST" duration-ms="706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetChildFrame -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T12:41:15 IST" name="tearDown" finished-at="2025-09-08T12:41:16 IST" duration-ms="310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetChildFrame status=SUCCESS method=AlertsFramesWindowsTests.GetChildFrame()[pri:15, instance:tests.AlertsFramesWindowsTests@1339e7aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="teardownSuite()[pri:0, instance:tests.AlertsFramesWindowsTests@1339e7aa]" started-at="2025-09-08T13:10:27 IST" name="teardownSuite" finished-at="2025-09-08T13:10:39 IST" duration-ms="11774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownSuite -->
      </class> <!-- tests.AlertsFramesWindowsTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
