<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="123" passed="110" failed="6" skipped="7">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-04T17:44:26 IST" name="Surefire suite" finished-at="2025-09-04T18:15:54 IST" duration-ms="1888415">
    <groups>
    </groups>
    <test started-at="2025-09-04T17:44:26 IST" name="Surefire test" finished-at="2025-09-04T18:15:54 IST" duration-ms="1888415">
      <class name="tests.FormTests">
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:07:40 IST" name="setUP" finished-at="2025-09-04T18:07:52 IST" duration-ms="12626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="FormsCard()[pri:1, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:07:52 IST" name="FormsCard" finished-at="2025-09-04T18:07:54 IST" duration-ms="1581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FormsCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:07:54 IST" name="tearDown" finished-at="2025-09-04T18:07:54 IST" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FormsCard status=SUCCESS method=FormTests.FormsCard()[pri:1, instance:tests.FormTests@7a220c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:07:54 IST" name="setUP" finished-at="2025-09-04T18:08:06 IST" duration-ms="11978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="FormButton()[pri:2, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:08:06 IST" name="FormButton" finished-at="2025-09-04T18:08:07 IST" duration-ms="764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FormButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:08:07 IST" name="tearDown" finished-at="2025-09-04T18:08:08 IST" duration-ms="856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FormButton status=SUCCESS method=FormTests.FormButton()[pri:2, instance:tests.FormTests@7a220c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:08:08 IST" name="setUP" finished-at="2025-09-04T18:08:39 IST" duration-ms="30600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:08:39 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-04T18:08:53 IST" duration-ms="14834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Johny', lastName='Bravo', userMail='Jbravo@demoqa.com', gender='Male', mobile='9.238343488E9', dob='15/08/2000', subject='Computer Science', hobbies='Sports,Music', picturePath='/TestData/Mphoto.jpg', address='511 Grant 481, Prattsville\n Arkansas 72129\n United States', state='NCR', city='Delhi'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:08:53 IST" name="tearDown" finished-at="2025-09-04T18:08:54 IST" duration-ms="717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:08:54 IST" name="setUP" finished-at="2025-09-04T18:09:06 IST" duration-ms="11585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:09:06 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-04T18:09:17 IST" duration-ms="11178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Gene', lastName='Femina', userMail='GFemina@demoqa.com', gender='Female', mobile='1.888343432E9', dob='22/05/2002', subject='Accounting', hobbies='Music,Reading', picturePath='/TestData/Fphoto.png', address='512 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Uttar Pradesh', city='Merrut'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:09:17 IST" name="tearDown" finished-at="2025-09-04T18:09:18 IST" duration-ms="818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:09:18 IST" name="setUP" finished-at="2025-09-04T18:09:30 IST" duration-ms="12411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:09:30 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-04T18:09:44 IST" duration-ms="13623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Bud', lastName='Wisem', userMail='BWisem@demoqa.com', gender='Other', mobile='8.932465432E9', dob='31/12/1999', subject='Biology', hobbies='Reading', picturePath='/TestData/Ophoto.jpg', address='513 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Haryana', city='Panipat'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:09:44 IST" name="tearDown" finished-at="2025-09-04T18:09:44 IST" duration-ms="667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:09:44 IST" name="setUP" finished-at="2025-09-04T18:09:56 IST" duration-ms="11561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:09:56 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-04T18:10:10 IST" duration-ms="14529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Tom', lastName='Boss', userMail='TBoss@demoqa.com', gender='Male', mobile='7.839875281E9', dob='1/26/03', subject='Social Studies', hobbies='Sports,Reading', picturePath='/TestData/M2photo.jpg', address='514 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Rajasthan', city='Jaiselmer'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@7a220c9a]" started-at="2025-09-04T18:10:10 IST" name="tearDown" finished-at="2025-09-04T18:10:11 IST" duration-ms="751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@7a220c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.FormTests -->
      <class name="tests.WidgetsTests">
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:11 IST" name="setUP" finished-at="2025-09-04T18:10:23 IST" duration-ms="11787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="accessWidgets()[pri:1, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:23 IST" name="accessWidgets" finished-at="2025-09-04T18:10:23 IST" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWidgets -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:23 IST" name="tearDown" finished-at="2025-09-04T18:10:24 IST" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessWidgets status=SUCCESS method=WidgetsTests.accessWidgets()[pri:1, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:24 IST" name="setUP" finished-at="2025-09-04T18:10:36 IST" duration-ms="11693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="Accordian()[pri:2, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:36 IST" name="Accordian" finished-at="2025-09-04T18:10:37 IST" duration-ms="1161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accordian -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:37 IST" name="tearDown" finished-at="2025-09-04T18:10:37 IST" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Accordian status=SUCCESS method=WidgetsTests.Accordian()[pri:2, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:37 IST" name="setUP" finished-at="2025-09-04T18:10:43 IST" duration-ms="5767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AccessWhatis()[pri:3, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:43 IST" name="AccessWhatis" finished-at="2025-09-04T18:10:44 IST" duration-ms="1075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhatis -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:44 IST" name="tearDown" finished-at="2025-09-04T18:10:44 IST" duration-ms="436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhatis status=SUCCESS method=WidgetsTests.AccessWhatis()[pri:3, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:44 IST" name="setUP" finished-at="2025-09-04T18:10:57 IST" duration-ms="12646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AccessWhereDoes()[pri:4, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:57 IST" name="AccessWhereDoes" finished-at="2025-09-04T18:10:58 IST" duration-ms="830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhereDoes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:58 IST" name="tearDown" finished-at="2025-09-04T18:10:58 IST" duration-ms="433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhereDoes status=SUCCESS method=WidgetsTests.AccessWhereDoes()[pri:4, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:10:58 IST" name="setUP" finished-at="2025-09-04T18:11:04 IST" duration-ms="5673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AccessWhyDoWe()[pri:5, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:04 IST" name="AccessWhyDoWe" finished-at="2025-09-04T18:11:05 IST" duration-ms="1008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhyDoWe -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:05 IST" name="tearDown" finished-at="2025-09-04T18:11:05 IST" duration-ms="471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhyDoWe status=SUCCESS method=WidgetsTests.AccessWhyDoWe()[pri:5, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:05 IST" name="setUP" finished-at="2025-09-04T18:11:17 IST" duration-ms="11826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoComplete()[pri:6, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:17 IST" name="AutoComplete" finished-at="2025-09-04T18:11:18 IST" duration-ms="956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoComplete -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:18 IST" name="tearDown" finished-at="2025-09-04T18:11:19 IST" duration-ms="473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoComplete status=SUCCESS method=WidgetsTests.AutoComplete()[pri:6, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:19 IST" name="setUP" finished-at="2025-09-04T18:11:32 IST" duration-ms="13305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:32 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:11:35 IST" duration-ms="2441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='A', expectedColors=[Black, Magenta, Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:35 IST" name="tearDown" finished-at="2025-09-04T18:11:35 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:35 IST" name="setUP" finished-at="2025-09-04T18:11:51 IST" duration-ms="15841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:51 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:11:52 IST" duration-ms="1487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='B', expectedColors=[Blue, Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:52 IST" name="tearDown" finished-at="2025-09-04T18:11:53 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:11:53 IST" name="setUP" finished-at="2025-09-04T18:12:05 IST" duration-ms="12475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:05 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:12:07 IST" duration-ms="1608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='C', expectedColors=[Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:07 IST" name="tearDown" finished-at="2025-09-04T18:12:07 IST" duration-ms="394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:07 IST" name="setUP" finished-at="2025-09-04T18:12:19 IST" duration-ms="12098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:19 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:12:21 IST" duration-ms="1995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='D', expectedColors=[Red, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:21 IST" name="tearDown" finished-at="2025-09-04T18:12:22 IST" duration-ms="501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:22 IST" name="setUP" finished-at="2025-09-04T18:12:35 IST" duration-ms="12960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:35 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:12:39 IST" duration-ms="4669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='E', expectedColors=[Red, Blue, Green, Yellow, Purple, White, Voilet, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:39 IST" name="tearDown" finished-at="2025-09-04T18:12:40 IST" duration-ms="641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:40 IST" name="setUP" finished-at="2025-09-04T18:12:53 IST" duration-ms="13159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:53 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:12:56 IST" duration-ms="2641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='G', expectedColors=[Green, Indigo, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:56 IST" name="tearDown" finished-at="2025-09-04T18:12:56 IST" duration-ms="508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:12:56 IST" name="setUP" finished-at="2025-09-04T18:13:09 IST" duration-ms="12765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:09 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:13:11 IST" duration-ms="1785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='H', expectedColors=[White]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:11 IST" name="tearDown" finished-at="2025-09-04T18:13:11 IST" duration-ms="439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:11 IST" name="setUP" finished-at="2025-09-04T18:13:23 IST" duration-ms="11670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:23 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:13:26 IST" duration-ms="2753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='I', expectedColors=[White, Voilet, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:26 IST" name="tearDown" finished-at="2025-09-04T18:13:26 IST" duration-ms="534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:26 IST" name="setUP" finished-at="2025-09-04T18:13:32 IST" duration-ms="5831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:32 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:13:34 IST" duration-ms="1416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='K', expectedColors=[Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:34 IST" name="tearDown" finished-at="2025-09-04T18:13:34 IST" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:34 IST" name="setUP" finished-at="2025-09-04T18:13:46 IST" duration-ms="12040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:46 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:13:50 IST" duration-ms="3428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='L', expectedColors=[Blue, Yellow, Purple, Black, Voilet]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:50 IST" name="tearDown" finished-at="2025-09-04T18:13:50 IST" duration-ms="518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:13:50 IST" name="setUP" finished-at="2025-09-04T18:14:09 IST" duration-ms="18538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:09 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:14:10 IST" duration-ms="1286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='M', expectedColors=[Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:10 IST" name="tearDown" finished-at="2025-09-04T18:14:11 IST" duration-ms="1297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:11 IST" name="setUP" finished-at="2025-09-04T18:14:23 IST" duration-ms="12066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:23 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:14:26 IST" duration-ms="2982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='N', expectedColors=[Green, Indigo, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:26 IST" name="tearDown" finished-at="2025-09-04T18:14:27 IST" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:27 IST" name="setUP" finished-at="2025-09-04T18:14:34 IST" duration-ms="6931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:34 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:14:36 IST" duration-ms="2133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='O', expectedColors=[Yellow, Voilet, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:36 IST" name="tearDown" finished-at="2025-09-04T18:14:37 IST" duration-ms="941" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:37 IST" name="setUP" finished-at="2025-09-04T18:14:48 IST" duration-ms="11268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:48 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:14:50 IST" duration-ms="1543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='P', expectedColors=[Purple]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:50 IST" name="tearDown" finished-at="2025-09-04T18:14:50 IST" duration-ms="490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:14:50 IST" name="setUP" finished-at="2025-09-04T18:15:14 IST" duration-ms="24056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:14 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:15:16 IST" duration-ms="1723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='Q', expectedColors=[Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:16 IST" name="tearDown" finished-at="2025-09-04T18:15:16 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:16 IST" name="setUP" finished-at="2025-09-04T18:15:28 IST" duration-ms="11870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:28 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:15:31 IST" duration-ms="2747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='R', expectedColors=[Red, Green, Purple]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:31 IST" name="tearDown" finished-at="2025-09-04T18:15:31 IST" duration-ms="509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:31 IST" name="setUP" finished-at="2025-09-04T18:15:39 IST" duration-ms="7847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:39 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:15:42 IST" duration-ms="2798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='T', expectedColors=[White, Voilet, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:42 IST" name="tearDown" finished-at="2025-09-04T18:15:43 IST" duration-ms="537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:43 IST" name="setUP" finished-at="2025-09-04T18:15:54 IST" duration-ms="11869" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='U', expectedColors=[Blue, Purple, Aqua]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="tearDown" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='W', expectedColors=[Yellow, White]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='Y', expectedColors=[Yellow]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='V', expectedColors=[Voilet]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="tearDown" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="setUP" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="setUP" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="setUP" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="tearDown" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="tearDown" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="AutoCompleteSearchRemove(models.ColorSelectionData)[pri:8, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="AutoCompleteSearchRemove" data-provider="ColorSelectionDataRemove" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='E', expectedColors=[Green, Yellow]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearchRemove -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="setUP" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="tearDown" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="setUP" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="AutoCompleteSingle(java.lang.String,java.lang.String)[pri:9, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="AutoCompleteSingle" data-provider="SingleColorData" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Green]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSingle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="tearDown" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="SingleAddRemove(java.lang.String,java.lang.String)[pri:10, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="SingleAddRemove" data-provider="SingleColorData" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Green]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to navigate to https://demoqa.com after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to navigate to https://demoqa.com after 3 attempts
at utils.RetryUrlAccess.navigateWithRetry(RetryUrlAccess.java:45)
at base.demoqaBase.setUP(demoqaBase.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleAddRemove -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="setUP" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@2421cc4]" started-at="2025-09-04T18:15:54 IST" name="tearDown" finished-at="2025-09-04T18:15:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.WidgetsTests -->
      <class name="tests.ElementsTests">
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:02 IST" name="setUP" finished-at="2025-09-04T17:49:14 IST" duration-ms="12097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ElementsCard()[pri:1, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:14 IST" name="ElementsCard" finished-at="2025-09-04T17:49:15 IST" duration-ms="812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ElementsCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:15 IST" name="tearDown" finished-at="2025-09-04T17:49:15 IST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ElementsCard status=SUCCESS method=ElementsTests.ElementsCard()[pri:1, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:17 IST" name="setUP" finished-at="2025-09-04T17:49:23 IST" duration-ms="6067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:23 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-04T17:49:25 IST" duration-ms="2376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', currentAddress='301 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='511 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:25 IST" name="tearDown" finished-at="2025-09-04T17:49:26 IST" duration-ms="823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:26 IST" name="setUP" finished-at="2025-09-04T17:49:32 IST" duration-ms="5898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:32 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-04T17:49:34 IST" duration-ms="2054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Gene', lastName='Femina', email='GFemina@demoqa.com', currentAddress='302 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='512 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:34 IST" name="tearDown" finished-at="2025-09-04T17:49:35 IST" duration-ms="924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:35 IST" name="setUP" finished-at="2025-09-04T17:49:48 IST" duration-ms="12995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:48 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-04T17:49:50 IST" duration-ms="2559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Bud', lastName='Wisem', email='BWisem@demoqa.com', currentAddress='303 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='513 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:50 IST" name="tearDown" finished-at="2025-09-04T17:49:51 IST" duration-ms="759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:49:51 IST" name="setUP" finished-at="2025-09-04T17:50:04 IST" duration-ms="13154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:04 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-04T17:50:07 IST" duration-ms="2786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Tom', lastName='Boss', email='TBoss@demoqa.com', currentAddress='304 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='514 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:07 IST" name="tearDown" finished-at="2025-09-04T17:50:08 IST" duration-ms="837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:08 IST" name="setUP" finished-at="2025-09-04T17:50:19 IST" duration-ms="11586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="CheckBox()[pri:3, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:19 IST" name="CheckBox" finished-at="2025-09-04T17:50:20 IST" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:20 IST" name="tearDown" finished-at="2025-09-04T17:50:21 IST" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckBox status=SUCCESS method=ElementsTests.CheckBox()[pri:3, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:21 IST" name="setUP" finished-at="2025-09-04T17:50:28 IST" duration-ms="7340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingHomeCheckBox()[pri:4, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:28 IST" name="SelectingHomeCheckBox" finished-at="2025-09-04T17:50:30 IST" duration-ms="1460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingHomeCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:30 IST" name="tearDown" finished-at="2025-09-04T17:50:30 IST" duration-ms="480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingHomeCheckBox status=SUCCESS method=ElementsTests.SelectingHomeCheckBox()[pri:4, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:30 IST" name="setUP" finished-at="2025-09-04T17:50:36 IST" duration-ms="5845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingDesktopCheckBox()[pri:5, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:36 IST" name="SelectingDesktopCheckBox" finished-at="2025-09-04T17:50:37 IST" duration-ms="1072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDesktopCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:37 IST" name="tearDown" finished-at="2025-09-04T17:50:38 IST" duration-ms="571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDesktopCheckBox status=SUCCESS method=ElementsTests.SelectingDesktopCheckBox()[pri:5, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:38 IST" name="setUP" finished-at="2025-09-04T17:50:46 IST" duration-ms="8121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingNotesCommandsClick()[pri:6, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:46 IST" name="SelectingNotesCommandsClick" finished-at="2025-09-04T17:50:48 IST" duration-ms="1733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingNotesCommandsClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:48 IST" name="tearDown" finished-at="2025-09-04T17:50:48 IST" duration-ms="553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingNotesCommandsClick status=SUCCESS method=ElementsTests.SelectingNotesCommandsClick()[pri:6, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:50:48 IST" name="setUP" finished-at="2025-09-04T17:51:00 IST" duration-ms="11953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingDocumentsCheckBox()[pri:7, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:00 IST" name="SelectingDocumentsCheckBox" finished-at="2025-09-04T17:51:01 IST" duration-ms="1122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDocumentsCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:01 IST" name="tearDown" finished-at="2025-09-04T17:51:02 IST" duration-ms="538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDocumentsCheckBox status=SUCCESS method=ElementsTests.SelectingDocumentsCheckBox()[pri:7, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:02 IST" name="setUP" finished-at="2025-09-04T17:51:10 IST" duration-ms="7948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingWorkSpace()[pri:8, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:10 IST" name="SelectingWorkSpace" finished-at="2025-09-04T17:51:11 IST" duration-ms="1713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingWorkSpace -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:11 IST" name="tearDown" finished-at="2025-09-04T17:51:12 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingWorkSpace status=SUCCESS method=ElementsTests.SelectingWorkSpace()[pri:8, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:12 IST" name="setUP" finished-at="2025-09-04T17:51:19 IST" duration-ms="6685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectReact()[pri:9, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:19 IST" name="SelectReact" finished-at="2025-09-04T17:51:21 IST" duration-ms="1804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReact -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:21 IST" name="tearDown" finished-at="2025-09-04T17:51:21 IST" duration-ms="538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectReact status=SUCCESS method=ElementsTests.SelectReact()[pri:9, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:21 IST" name="setUP" finished-at="2025-09-04T17:51:37 IST" duration-ms="16017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectAngular()[pri:10, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:37 IST" name="SelectAngular" finished-at="2025-09-04T17:51:40 IST" duration-ms="2245" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span class="rct-checkbox">...</span> is not clickable at point (515, 676). Other element would receive the click: <iframe frameborder="0" src="https://945b6582a4b89f8bfb509799cc3f130a.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html" id="google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" width="728" height="90" data-is-safeframe="true" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="private-state-token-redemption;attribution-reporting" aria-label="Advertisement" tabindex="0" data-google-container-id="1" style="border: 0px; vertical-align: bottom;" data-load-complete="true"></iframe>
  (Session info: chrome=137.0.7151.120)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [710ef305f84d8c7794ae3fffcd1dc04b, clickElement {id=f.8ABBE38BF250F5632597339685A91D24.d.3A0793E95880220FF59C93CCB0F0F1C5.e.64}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57113}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57113/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (710ef305f84d8c7794ae3fffcd1dc04b)] -> xpath: //label[@for='tree-node-angular']//span[@class='rct-checkbox']]
Session ID: 710ef305f84d8c7794ae3fffcd1dc04b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span class="rct-checkbox">...</span> is not clickable at point (515, 676). Other element would receive the click: <iframe frameborder="0" src="https://945b6582a4b89f8bfb509799cc3f130a.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html" id="google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" width="728" height="90" data-is-safeframe="true" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="private-state-token-redemption;attribution-reporting" aria-label="Advertisement" tabindex="0" data-google-container-id="1" style="border: 0px; vertical-align: bottom;" data-load-complete="true"></iframe>
  (Session info: chrome=137.0.7151.120)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [710ef305f84d8c7794ae3fffcd1dc04b, clickElement {id=f.8ABBE38BF250F5632597339685A91D24.d.3A0793E95880220FF59C93CCB0F0F1C5.e.64}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57113}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57113/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (710ef305f84d8c7794ae3fffcd1dc04b)] -> xpath: //label[@for='tree-node-angular']//span[@class='rct-checkbox']]
Session ID: 710ef305f84d8c7794ae3fffcd1dc04b
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy29.click(Unknown Source)
at pages.elementsPage.selectAngular(elementsPage.java:497)
at tests.ElementsTests.SelectAngular(ElementsTests.java:217)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectAngular -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:40 IST" name="tearDown" finished-at="2025-09-04T17:51:41 IST" duration-ms="863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectAngular status=FAILURE method=ElementsTests.SelectAngular()[pri:10, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:41 IST" name="setUP" finished-at="2025-09-04T17:51:52 IST" duration-ms="11884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectVeu()[pri:11, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:52 IST" name="SelectVeu" finished-at="2025-09-04T17:51:54 IST" duration-ms="1899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectVeu -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:54 IST" name="tearDown" finished-at="2025-09-04T17:51:55 IST" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectVeu status=SUCCESS method=ElementsTests.SelectVeu()[pri:11, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:51:55 IST" name="setUP" finished-at="2025-09-04T17:52:07 IST" duration-ms="12166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectReactAnuglarVeu()[pri:12, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:07 IST" name="SelectReactAnuglarVeu" finished-at="2025-09-04T17:52:09 IST" duration-ms="2141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReactAnuglarVeu -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:09 IST" name="tearDown" finished-at="2025-09-04T17:52:10 IST" duration-ms="580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectReactAnuglarVeu status=SUCCESS method=ElementsTests.SelectReactAnuglarVeu()[pri:12, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:10 IST" name="setUP" finished-at="2025-09-04T17:52:27 IST" duration-ms="17488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingOffice()[pri:13, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:27 IST" name="SelectingOffice" finished-at="2025-09-04T17:52:28 IST" duration-ms="1300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingOffice -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:28 IST" name="tearDown" finished-at="2025-09-04T17:52:29 IST" duration-ms="487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingOffice status=SUCCESS method=ElementsTests.SelectingOffice()[pri:13, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:29 IST" name="setUP" finished-at="2025-09-04T17:52:42 IST" duration-ms="12901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectPublic()[pri:14, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:42 IST" name="SelectPublic" finished-at="2025-09-04T17:52:43 IST" duration-ms="1539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectPublic -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:43 IST" name="tearDown" finished-at="2025-09-04T17:52:44 IST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectPublic status=SUCCESS method=ElementsTests.SelectPublic()[pri:14, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:44 IST" name="setUP" finished-at="2025-09-04T17:52:56 IST" duration-ms="11727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectPrivate()[pri:15, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:56 IST" name="SelectPrivate" finished-at="2025-09-04T17:52:57 IST" duration-ms="1862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectPrivate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:57 IST" name="tearDown" finished-at="2025-09-04T17:52:58 IST" duration-ms="641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectPrivate status=SUCCESS method=ElementsTests.SelectPrivate()[pri:15, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:52:58 IST" name="setUP" finished-at="2025-09-04T17:53:06 IST" duration-ms="7693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectClassified()[pri:16, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:06 IST" name="SelectClassified" finished-at="2025-09-04T17:53:08 IST" duration-ms="1764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectClassified -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:08 IST" name="tearDown" finished-at="2025-09-04T17:53:08 IST" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectClassified status=SUCCESS method=ElementsTests.SelectClassified()[pri:16, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:08 IST" name="setUP" finished-at="2025-09-04T17:53:19 IST" duration-ms="10790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectGeneral()[pri:17, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:19 IST" name="SelectGeneral" finished-at="2025-09-04T17:53:20 IST" duration-ms="1444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectGeneral -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:20 IST" name="tearDown" finished-at="2025-09-04T17:53:21 IST" duration-ms="519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectGeneral status=SUCCESS method=ElementsTests.SelectGeneral()[pri:17, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:21 IST" name="setUP" finished-at="2025-09-04T17:53:27 IST" duration-ms="6593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectOfficeAll()[pri:18, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:27 IST" name="SelectOfficeAll" finished-at="2025-09-04T17:53:29 IST" duration-ms="1494" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="tree-node"]/ol/li/ol/li[2]/span/button"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c2b1fc6fda017bb5121742c0392e3eeb, findElement {value=//*[@id="tree-node"]/ol/li/ol/li[2]/span/button, using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58359}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58359/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c2b1fc6fda017bb5121742c0392e3eeb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="tree-node"]/ol/li/ol/li[2]/span/button"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c2b1fc6fda017bb5121742c0392e3eeb, findElement {value=//*[@id="tree-node"]/ol/li/ol/li[2]/span/button, using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58359}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58359/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c2b1fc6fda017bb5121742c0392e3eeb
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy29.click(Unknown Source)
at pages.elementsPage.ToggleDocuments(elementsPage.java:474)
at tests.ElementsTests.SelectOfficeAll(ElementsTests.java:352)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectOfficeAll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:29 IST" name="tearDown" finished-at="2025-09-04T17:53:30 IST" duration-ms="1124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectOfficeAll status=FAILURE method=ElementsTests.SelectOfficeAll()[pri:18, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:30 IST" name="setUP" finished-at="2025-09-04T17:53:36 IST" duration-ms="6158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingDownloads()[pri:19, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:36 IST" name="SelectingDownloads" finished-at="2025-09-04T17:53:38 IST" duration-ms="1517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDownloads -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:38 IST" name="tearDown" finished-at="2025-09-04T17:53:38 IST" duration-ms="656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDownloads status=SUCCESS method=ElementsTests.SelectingDownloads()[pri:19, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:38 IST" name="setUP" finished-at="2025-09-04T17:53:46 IST" duration-ms="7558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingWordFile()[pri:20, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:46 IST" name="SelectingWordFile" finished-at="2025-09-04T17:53:48 IST" duration-ms="1719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingWordFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:48 IST" name="tearDown" finished-at="2025-09-04T17:53:48 IST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingWordFile status=SUCCESS method=ElementsTests.SelectingWordFile()[pri:20, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:53:48 IST" name="setUP" finished-at="2025-09-04T17:54:03 IST" duration-ms="14526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingExcelFile()[pri:21, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:03 IST" name="SelectingExcelFile" finished-at="2025-09-04T17:54:05 IST" duration-ms="2043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingExcelFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:05 IST" name="tearDown" finished-at="2025-09-04T17:54:05 IST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingExcelFile status=SUCCESS method=ElementsTests.SelectingExcelFile()[pri:21, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:05 IST" name="setUP" finished-at="2025-09-04T17:54:17 IST" duration-ms="11841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectingAllFiles()[pri:22, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:17 IST" name="SelectingAllFiles" finished-at="2025-09-04T17:54:19 IST" duration-ms="2512" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span class="rct-checkbox">...</span> is not clickable at point (491, 644). Other element would receive the click: <iframe frameborder="0" src="https://8469f4ca36bafe945234818caaa0d635.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html" id="google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" width="728" height="90" data-is-safeframe="true" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="private-state-token-redemption;attribution-reporting" aria-label="Advertisement" tabindex="0" data-google-container-id="1" style="border: 0px; vertical-align: bottom;" data-load-complete="true"></iframe>
  (Session info: chrome=137.0.7151.120)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [72ac76919fb52c26814dd3c369e36c6f, clickElement {id=f.8644803F461626F5433AE5BC0582553F.d.E474775649DEE7E1D1394580F3251AC1.e.64}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58948}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58948/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (72ac76919fb52c26814dd3c369e36c6f)] -> xpath: //label[@for='tree-node-wordFile']//span[@class='rct-checkbox']]
Session ID: 72ac76919fb52c26814dd3c369e36c6f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span class="rct-checkbox">...</span> is not clickable at point (491, 644). Other element would receive the click: <iframe frameborder="0" src="https://8469f4ca36bafe945234818caaa0d635.safeframe.googlesyndication.com/safeframe/1-0-45/html/container.html" id="google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" width="728" height="90" data-is-safeframe="true" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" allow="private-state-token-redemption;attribution-reporting" aria-label="Advertisement" tabindex="0" data-google-container-id="1" style="border: 0px; vertical-align: bottom;" data-load-complete="true"></iframe>
  (Session info: chrome=137.0.7151.120)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [72ac76919fb52c26814dd3c369e36c6f, clickElement {id=f.8644803F461626F5433AE5BC0582553F.d.E474775649DEE7E1D1394580F3251AC1.e.64}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58948}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58948/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (72ac76919fb52c26814dd3c369e36c6f)] -> xpath: //label[@for='tree-node-wordFile']//span[@class='rct-checkbox']]
Session ID: 72ac76919fb52c26814dd3c369e36c6f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy29.click(Unknown Source)
at pages.elementsPage.selectWordFile(elementsPage.java:557)
at tests.ElementsTests.SelectingAllFiles(ElementsTests.java:420)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingAllFiles -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:19 IST" name="tearDown" finished-at="2025-09-04T17:54:20 IST" duration-ms="902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingAllFiles status=FAILURE method=ElementsTests.SelectingAllFiles()[pri:22, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:20 IST" name="setUP" finished-at="2025-09-04T17:54:56 IST" duration-ms="35324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="clickRadioButton()[pri:23, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:56 IST" name="clickRadioButton" finished-at="2025-09-04T17:54:56 IST" duration-ms="703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:56 IST" name="tearDown" finished-at="2025-09-04T17:54:57 IST" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickRadioButton status=SUCCESS method=ElementsTests.clickRadioButton()[pri:23, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:54:57 IST" name="setUP" finished-at="2025-09-04T17:55:10 IST" duration-ms="12853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectYesRadioButton()[pri:24, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:10 IST" name="SelectYesRadioButton" finished-at="2025-09-04T17:55:11 IST" duration-ms="1618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectYesRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:11 IST" name="tearDown" finished-at="2025-09-04T17:55:12 IST" duration-ms="509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectYesRadioButton status=SUCCESS method=ElementsTests.SelectYesRadioButton()[pri:24, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:12 IST" name="setUP" finished-at="2025-09-04T17:55:20 IST" duration-ms="8398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="SelectImpressiveRadioButton()[pri:25, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:20 IST" name="SelectImpressiveRadioButton" finished-at="2025-09-04T17:55:22 IST" duration-ms="1379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectImpressiveRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:22 IST" name="tearDown" finished-at="2025-09-04T17:55:22 IST" duration-ms="519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectImpressiveRadioButton status=SUCCESS method=ElementsTests.SelectImpressiveRadioButton()[pri:25, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:22 IST" name="setUP" finished-at="2025-09-04T17:55:28 IST" duration-ms="6127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="WebTablesClick()[pri:26, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:28 IST" name="WebTablesClick" finished-at="2025-09-04T17:55:29 IST" duration-ms="914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebTablesClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:29 IST" name="tearDown" finished-at="2025-09-04T17:55:30 IST" duration-ms="658" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WebTablesClick status=SUCCESS method=ElementsTests.WebTablesClick()[pri:26, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:30 IST" name="setUP" finished-at="2025-09-04T17:55:44 IST" duration-ms="13565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:44 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-04T17:55:48 IST" duration-ms="4070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:48 IST" name="tearDown" finished-at="2025-09-04T17:55:48 IST" duration-ms="586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:55:48 IST" name="setUP" finished-at="2025-09-04T17:56:01 IST" duration-ms="12486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:01 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-04T17:56:05 IST" duration-ms="3844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Gene', lastName='Femina', email='GFemina@demoqa.com', salary=180000, age=300, department='Finance'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:05 IST" name="tearDown" finished-at="2025-09-04T17:56:05 IST" duration-ms="548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:05 IST" name="setUP" finished-at="2025-09-04T17:56:18 IST" duration-ms="12582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:18 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-04T17:56:22 IST" duration-ms="3990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Bud', lastName='Wisem', email='BWisem@demoqa.com', salary=150000, age=400, department='Medicine'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:22 IST" name="tearDown" finished-at="2025-09-04T17:56:22 IST" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:22 IST" name="setUP" finished-at="2025-09-04T17:56:54 IST" duration-ms="31577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:54 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-04T17:56:58 IST" duration-ms="4057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tom', lastName='Boss', email='TBoss@demoqa.com', salary=190000, age=420, department='Recreation'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:58 IST" name="tearDown" finished-at="2025-09-04T17:56:58 IST" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:56:58 IST" name="setUP" finished-at="2025-09-04T17:57:04 IST" duration-ms="6134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableAddSearch(models.WebTableUser)[pri:28, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:04 IST" name="webTableAddSearch" data-provider="WTFormDataEdit" finished-at="2025-09-04T17:57:09 IST" duration-ms="4534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:09 IST" name="tearDown" finished-at="2025-09-04T17:57:10 IST" duration-ms="522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddSearch status=SUCCESS method=ElementsTests.webTableAddSearch(models.WebTableUser)[pri:28, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:10 IST" name="setUP" finished-at="2025-09-04T17:57:22 IST" duration-ms="12487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableAddEditFirstName(models.WebTableUser)[pri:29, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:22 IST" name="webTableAddEditFirstName" data-provider="WTFormDataEdit" finished-at="2025-09-04T17:57:27 IST" duration-ms="5281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tonny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddEditFirstName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:27 IST" name="tearDown" finished-at="2025-09-04T17:57:28 IST" duration-ms="480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddEditFirstName status=SUCCESS method=ElementsTests.webTableAddEditFirstName(models.WebTableUser)[pri:29, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:28 IST" name="setUP" finished-at="2025-09-04T17:57:41 IST" duration-ms="13519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableAddSearchEdit(models.WebTableUser)[pri:30, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:41 IST" name="webTableAddSearchEdit" data-provider="WTFormDataEdit" finished-at="2025-09-04T17:57:48 IST" duration-ms="6319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tonny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddSearchEdit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:48 IST" name="tearDown" finished-at="2025-09-04T17:57:48 IST" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddSearchEdit status=SUCCESS method=ElementsTests.webTableAddSearchEdit(models.WebTableUser)[pri:30, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:57:48 IST" name="setUP" finished-at="2025-09-04T17:58:01 IST" duration-ms="12231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="webTableDeleteUser(models.WebTableUser)[pri:31, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:58:01 IST" name="webTableDeleteUser" data-provider="WTFormDataEdit" finished-at="2025-09-04T17:58:05 IST" duration-ms="3995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableDeleteUser -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:58:05 IST" name="tearDown" finished-at="2025-09-04T17:58:05 IST" duration-ms="536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableDeleteUser status=SUCCESS method=ElementsTests.webTableDeleteUser(models.WebTableUser)[pri:31, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:58:05 IST" name="setUP" finished-at="2025-09-04T17:58:18 IST" duration-ms="12444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="testAddAllUsersFromExcel()[pri:32, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:58:18 IST" name="testAddAllUsersFromExcel" finished-at="2025-09-04T17:58:27 IST" duration-ms="9303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllUsersFromExcel -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:58:27 IST" name="tearDown" finished-at="2025-09-04T17:58:28 IST" duration-ms="810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddAllUsersFromExcel status=SUCCESS method=ElementsTests.testAddAllUsersFromExcel()[pri:32, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:58:28 IST" name="setUP" finished-at="2025-09-04T17:59:03 IST" duration-ms="35185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="testAddAllUsersSearchEdit()[pri:33, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:03 IST" name="testAddAllUsersSearchEdit" finished-at="2025-09-04T17:59:18 IST" duration-ms="14698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllUsersSearchEdit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:18 IST" name="tearDown" finished-at="2025-09-04T17:59:18 IST" duration-ms="603" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddAllUsersSearchEdit status=SUCCESS method=ElementsTests.testAddAllUsersSearchEdit()[pri:33, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:18 IST" name="setUP" finished-at="2025-09-04T17:59:24 IST" duration-ms="5941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="EditSalaryDepartment()[pri:34, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:24 IST" name="EditSalaryDepartment" finished-at="2025-09-04T17:59:43 IST" duration-ms="18596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditSalaryDepartment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:43 IST" name="tearDown" finished-at="2025-09-04T17:59:43 IST" duration-ms="524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditSalaryDepartment status=SUCCESS method=ElementsTests.EditSalaryDepartment()[pri:34, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:43 IST" name="setUP" finished-at="2025-09-04T17:59:50 IST" duration-ms="6482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="Buttons()[pri:35, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:50 IST" name="Buttons" finished-at="2025-09-04T17:59:50 IST" duration-ms="663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Buttons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:50 IST" name="tearDown" finished-at="2025-09-04T17:59:51 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Buttons status=SUCCESS method=ElementsTests.Buttons()[pri:35, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T17:59:51 IST" name="setUP" finished-at="2025-09-04T18:00:04 IST" duration-ms="13098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="DoubleClickButtons()[pri:36, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:04 IST" name="DoubleClickButtons" finished-at="2025-09-04T18:00:05 IST" duration-ms="1325" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[@id='doubleClickMessage']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ddee27d8cfdc602227d03c8ac056b77f, findElement {value=//p[@id='doubleClickMessage'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61905}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61905/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ddee27d8cfdc602227d03c8ac056b77f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[@id='doubleClickMessage']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ddee27d8cfdc602227d03c8ac056b77f, findElement {value=//p[@id='doubleClickMessage'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61905}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61905/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ddee27d8cfdc602227d03c8ac056b77f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at pages.elementsPage.DoubleClickbtn(elementsPage.java:924)
at tests.ElementsTests.DoubleClickButtons(ElementsTests.java:771)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleClickButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:05 IST" name="tearDown" finished-at="2025-09-04T18:00:08 IST" duration-ms="2978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DoubleClickButtons status=FAILURE method=ElementsTests.DoubleClickButtons()[pri:36, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:08 IST" name="setUP" finished-at="2025-09-04T18:00:14 IST" duration-ms="6072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="RightClickButton()[pri:37, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:14 IST" name="RightClickButton" finished-at="2025-09-04T18:00:15 IST" duration-ms="1019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RightClickButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:15 IST" name="tearDown" finished-at="2025-09-04T18:00:16 IST" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RightClickButton status=SUCCESS method=ElementsTests.RightClickButton()[pri:37, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:16 IST" name="setUP" finished-at="2025-09-04T18:00:28 IST" duration-ms="12142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickMeButton()[pri:38, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:28 IST" name="ClickMeButton" finished-at="2025-09-04T18:00:29 IST" duration-ms="1417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMeButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:29 IST" name="tearDown" finished-at="2025-09-04T18:00:30 IST" duration-ms="561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickMeButton status=SUCCESS method=ElementsTests.ClickMeButton()[pri:38, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:30 IST" name="setUP" finished-at="2025-09-04T18:00:36 IST" duration-ms="6085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickAllButtons()[pri:39, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:36 IST" name="ClickAllButtons" finished-at="2025-09-04T18:00:46 IST" duration-ms="10475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAllButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:46 IST" name="tearDown" finished-at="2025-09-04T18:00:48 IST" duration-ms="1395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAllButtons status=SUCCESS method=ElementsTests.ClickAllButtons()[pri:39, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:00:48 IST" name="setUP" finished-at="2025-09-04T18:01:23 IST" duration-ms="35165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickLinks()[pri:40, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:23 IST" name="ClickLinks" finished-at="2025-09-04T18:01:24 IST" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLinks -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:24 IST" name="tearDown" finished-at="2025-09-04T18:01:24 IST" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLinks status=SUCCESS method=ElementsTests.ClickLinks()[pri:40, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:24 IST" name="setUP" finished-at="2025-09-04T18:01:37 IST" duration-ms="12713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickHomeLink()[pri:41, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:37 IST" name="ClickHomeLink" finished-at="2025-09-04T18:01:38 IST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickHomeLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:38 IST" name="tearDown" finished-at="2025-09-04T18:01:39 IST" duration-ms="450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickHomeLink status=SUCCESS method=ElementsTests.ClickHomeLink()[pri:41, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:39 IST" name="setUP" finished-at="2025-09-04T18:01:52 IST" duration-ms="13006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickDynamicHomeLink()[pri:42, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:52 IST" name="ClickDynamicHomeLink" finished-at="2025-09-04T18:01:53 IST" duration-ms="1340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDynamicHomeLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:53 IST" name="tearDown" finished-at="2025-09-04T18:01:53 IST" duration-ms="437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDynamicHomeLink status=SUCCESS method=ElementsTests.ClickDynamicHomeLink()[pri:42, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:01:54 IST" name="setUP" finished-at="2025-09-04T18:02:00 IST" duration-ms="6044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickCreatedAPILink()[pri:43, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:02:00 IST" name="ClickCreatedAPILink" finished-at="2025-09-04T18:02:01 IST" duration-ms="1096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickCreatedAPILink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:02:01 IST" name="tearDown" finished-at="2025-09-04T18:02:01 IST" duration-ms="800" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickCreatedAPILink status=SUCCESS method=ElementsTests.ClickCreatedAPILink()[pri:43, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:02:01 IST" name="setUP" finished-at="2025-09-04T18:02:37 IST" duration-ms="35137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickNoContentLink()[pri:44, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:02:37 IST" name="ClickNoContentLink" finished-at="2025-09-04T18:02:37 IST" duration-ms="892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNoContentLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:02:37 IST" name="tearDown" finished-at="2025-09-04T18:02:38 IST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNoContentLink status=SUCCESS method=ElementsTests.ClickNoContentLink()[pri:44, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:02:38 IST" name="setUP" finished-at="2025-09-04T18:03:08 IST" duration-ms="29702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickMovedLink()[pri:45, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:08 IST" name="ClickMovedLink" finished-at="2025-09-04T18:03:09 IST" duration-ms="1073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMovedLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:09 IST" name="tearDown" finished-at="2025-09-04T18:03:09 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickMovedLink status=SUCCESS method=ElementsTests.ClickMovedLink()[pri:45, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:09 IST" name="setUP" finished-at="2025-09-04T18:03:21 IST" duration-ms="11511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickBadRequestLink()[pri:46, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:21 IST" name="ClickBadRequestLink" finished-at="2025-09-04T18:03:22 IST" duration-ms="1762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBadRequestLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:22 IST" name="tearDown" finished-at="2025-09-04T18:03:23 IST" duration-ms="425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickBadRequestLink status=SUCCESS method=ElementsTests.ClickBadRequestLink()[pri:46, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:23 IST" name="setUP" finished-at="2025-09-04T18:03:35 IST" duration-ms="12606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickUnauthorizedLink()[pri:47, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:35 IST" name="ClickUnauthorizedLink" finished-at="2025-09-04T18:03:37 IST" duration-ms="1195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickUnauthorizedLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:37 IST" name="tearDown" finished-at="2025-09-04T18:03:37 IST" duration-ms="417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickUnauthorizedLink status=SUCCESS method=ElementsTests.ClickUnauthorizedLink()[pri:47, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:37 IST" name="setUP" finished-at="2025-09-04T18:03:50 IST" duration-ms="13002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickForbiddenLink()[pri:48, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:50 IST" name="ClickForbiddenLink" finished-at="2025-09-04T18:03:51 IST" duration-ms="1072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickForbiddenLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:51 IST" name="tearDown" finished-at="2025-09-04T18:03:52 IST" duration-ms="530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickForbiddenLink status=SUCCESS method=ElementsTests.ClickForbiddenLink()[pri:48, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:03:52 IST" name="setUP" finished-at="2025-09-04T18:04:04 IST" duration-ms="12046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickNotFoundLink()[pri:49, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:04 IST" name="ClickNotFoundLink" finished-at="2025-09-04T18:04:05 IST" duration-ms="1375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNotFoundLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:05 IST" name="tearDown" finished-at="2025-09-04T18:04:06 IST" duration-ms="527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNotFoundLink status=SUCCESS method=ElementsTests.ClickNotFoundLink()[pri:49, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:06 IST" name="setUP" finished-at="2025-09-04T18:04:19 IST" duration-ms="13045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickAllLinks()[pri:50, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:19 IST" name="ClickAllLinks" finished-at="2025-09-04T18:04:46 IST" duration-ms="27216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAllLinks -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:46 IST" name="tearDown" finished-at="2025-09-04T18:04:46 IST" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAllLinks status=SUCCESS method=ElementsTests.ClickAllLinks()[pri:50, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:46 IST" name="setUP" finished-at="2025-09-04T18:04:52 IST" duration-ms="5937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickBrokenLinksImages()[pri:51, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:52 IST" name="ClickBrokenLinksImages" finished-at="2025-09-04T18:04:54 IST" duration-ms="1343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBrokenLinksImages -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:54 IST" name="tearDown" finished-at="2025-09-04T18:04:54 IST" duration-ms="821" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickBrokenLinksImages status=SUCCESS method=ElementsTests.ClickBrokenLinksImages()[pri:51, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:04:54 IST" name="setUP" finished-at="2025-09-04T18:05:00 IST" duration-ms="5919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="GetValidImage()[pri:52, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:00 IST" name="GetValidImage" finished-at="2025-09-04T18:05:01 IST" duration-ms="1000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetValidImage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:01 IST" name="tearDown" finished-at="2025-09-04T18:05:02 IST" duration-ms="486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetValidImage status=SUCCESS method=ElementsTests.GetValidImage()[pri:52, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:02 IST" name="setUP" finished-at="2025-09-04T18:05:14 IST" duration-ms="12591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="GetBrokenImage()[pri:53, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:14 IST" name="GetBrokenImage" finished-at="2025-09-04T18:05:16 IST" duration-ms="1276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetBrokenImage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:16 IST" name="tearDown" finished-at="2025-09-04T18:05:16 IST" duration-ms="526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetBrokenImage status=SUCCESS method=ElementsTests.GetBrokenImage()[pri:53, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:16 IST" name="setUP" finished-at="2025-09-04T18:05:27 IST" duration-ms="10856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="BrokenLinksBrokenlink()[pri:54, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:27 IST" name="BrokenLinksBrokenlink" finished-at="2025-09-04T18:05:36 IST" duration-ms="8882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrokenLinksBrokenlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:36 IST" name="tearDown" finished-at="2025-09-04T18:05:36 IST" duration-ms="433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrokenLinksBrokenlink status=SUCCESS method=ElementsTests.BrokenLinksBrokenlink()[pri:54, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:36 IST" name="setUP" finished-at="2025-09-04T18:05:48 IST" duration-ms="11543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="BrokenLinksValidlink()[pri:54, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:48 IST" name="BrokenLinksValidlink" finished-at="2025-09-04T18:05:50 IST" duration-ms="2283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrokenLinksValidlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:50 IST" name="tearDown" finished-at="2025-09-04T18:05:51 IST" duration-ms="426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrokenLinksValidlink status=SUCCESS method=ElementsTests.BrokenLinksValidlink()[pri:54, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:05:51 IST" name="setUP" finished-at="2025-09-04T18:06:26 IST" duration-ms="35071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="UploadDownloadlink()[pri:55, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:26 IST" name="UploadDownloadlink" finished-at="2025-09-04T18:06:26 IST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadDownloadlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:26 IST" name="tearDown" finished-at="2025-09-04T18:06:27 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UploadDownloadlink status=SUCCESS method=ElementsTests.UploadDownloadlink()[pri:55, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:27 IST" name="setUP" finished-at="2025-09-04T18:06:33 IST" duration-ms="5936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="Downloadbtn()[pri:56, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:33 IST" name="Downloadbtn" finished-at="2025-09-04T18:06:34 IST" duration-ms="1187" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[File was not downloaded successfully. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: File was not downloaded successfully. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.elementsPage.DownloadFile(elementsPage.java:1184)
at tests.ElementsTests.Downloadbtn(ElementsTests.java:1121)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Downloadbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:34 IST" name="tearDown" finished-at="2025-09-04T18:06:35 IST" duration-ms="883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Downloadbtn status=FAILURE method=ElementsTests.Downloadbtn()[pri:56, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:35 IST" name="setUP" finished-at="2025-09-04T18:06:41 IST" duration-ms="5854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="Uploadbtn()[pri:57, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:41 IST" name="Uploadbtn" finished-at="2025-09-04T18:06:42 IST" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Uploadbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:42 IST" name="tearDown" finished-at="2025-09-04T18:06:42 IST" duration-ms="490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Uploadbtn status=SUCCESS method=ElementsTests.Uploadbtn()[pri:57, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:42 IST" name="setUP" finished-at="2025-09-04T18:06:55 IST" duration-ms="12069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="DynamicPropertiesbtn()[pri:58, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:55 IST" name="DynamicPropertiesbtn" finished-at="2025-09-04T18:06:56 IST" duration-ms="1099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DynamicPropertiesbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:56 IST" name="tearDown" finished-at="2025-09-04T18:06:56 IST" duration-ms="552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DynamicPropertiesbtn status=SUCCESS method=ElementsTests.DynamicPropertiesbtn()[pri:58, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:06:56 IST" name="setUP" finished-at="2025-09-04T18:07:05 IST" duration-ms="8806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ColorChangebtn()[pri:59, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:05 IST" name="ColorChangebtn" finished-at="2025-09-04T18:07:06 IST" duration-ms="1365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ColorChangebtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:06 IST" name="tearDown" finished-at="2025-09-04T18:07:07 IST" duration-ms="534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ColorChangebtn status=SUCCESS method=ElementsTests.ColorChangebtn()[pri:59, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:07 IST" name="setUP" finished-at="2025-09-04T18:07:20 IST" duration-ms="13076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="WillEnablebtn()[pri:59, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:20 IST" name="WillEnablebtn" finished-at="2025-09-04T18:07:26 IST" duration-ms="6330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WillEnablebtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:26 IST" name="tearDown" finished-at="2025-09-04T18:07:27 IST" duration-ms="524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WillEnablebtn status=SUCCESS method=ElementsTests.WillEnablebtn()[pri:59, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:27 IST" name="setUP" finished-at="2025-09-04T18:07:33 IST" duration-ms="5737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="VisibleAfterbtn()[pri:60, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:33 IST" name="VisibleAfterbtn" finished-at="2025-09-04T18:07:39 IST" duration-ms="6492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VisibleAfterbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@68702e03]" started-at="2025-09-04T18:07:39 IST" name="tearDown" finished-at="2025-09-04T18:07:40 IST" duration-ms="626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VisibleAfterbtn status=SUCCESS method=ElementsTests.VisibleAfterbtn()[pri:60, instance:tests.ElementsTests@68702e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ElementsTests -->
      <class name="tests.AlertsFramesWindowsTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:26 IST" name="setupReport" finished-at="2025-09-04T17:44:26 IST" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:26 IST" name="setUP" finished-at="2025-09-04T17:44:34 IST" duration-ms="8303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="accessAlertsFrameWindows()[pri:1, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:34 IST" name="accessAlertsFrameWindows" finished-at="2025-09-04T17:44:35 IST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAlertsFrameWindows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:35 IST" name="tearDown" finished-at="2025-09-04T17:44:35 IST" duration-ms="381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessAlertsFrameWindows status=SUCCESS method=AlertsFramesWindowsTests.accessAlertsFrameWindows()[pri:1, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:35 IST" name="setUP" finished-at="2025-09-04T17:44:47 IST" duration-ms="11563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="browserWindows()[pri:2, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:47 IST" name="browserWindows" finished-at="2025-09-04T17:44:47 IST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:47 IST" name="tearDown" finished-at="2025-09-04T17:44:47 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindows status=SUCCESS method=AlertsFramesWindowsTests.browserWindows()[pri:2, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:44:47 IST" name="setUP" finished-at="2025-09-04T17:45:00 IST" duration-ms="12434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="browserWindowsNewTab()[pri:3, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:00 IST" name="browserWindowsNewTab" finished-at="2025-09-04T17:45:01 IST" duration-ms="937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewTab -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:01 IST" name="tearDown" finished-at="2025-09-04T17:45:01 IST" duration-ms="397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewTab status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewTab()[pri:3, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:01 IST" name="setUP" finished-at="2025-09-04T17:45:11 IST" duration-ms="9426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="browserWindowsNewWindow()[pri:4, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:11 IST" name="browserWindowsNewWindow" finished-at="2025-09-04T17:45:12 IST" duration-ms="1197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewWindow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:12 IST" name="tearDown" finished-at="2025-09-04T17:45:12 IST" duration-ms="582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewWindow status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewWindow()[pri:4, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:12 IST" name="setUP" finished-at="2025-09-04T17:45:18 IST" duration-ms="5860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="browserWindowsNewWindowMsg()[pri:5, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:18 IST" name="browserWindowsNewWindowMsg" finished-at="2025-09-04T17:45:19 IST" duration-ms="1131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewWindowMsg -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:19 IST" name="tearDown" finished-at="2025-09-04T17:45:20 IST" duration-ms="825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewWindowMsg status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewWindowMsg()[pri:5, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:20 IST" name="setUP" finished-at="2025-09-04T17:45:33 IST" duration-ms="12622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickAlerts()[pri:6, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:33 IST" name="ClickAlerts" finished-at="2025-09-04T17:45:34 IST" duration-ms="921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAlerts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:34 IST" name="tearDown" finished-at="2025-09-04T17:45:34 IST" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAlerts status=SUCCESS method=AlertsFramesWindowsTests.ClickAlerts()[pri:6, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:34 IST" name="setUP" finished-at="2025-09-04T17:45:47 IST" duration-ms="12767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickToSeeAlerts()[pri:7, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:47 IST" name="ClickToSeeAlerts" finished-at="2025-09-04T17:45:53 IST" duration-ms="6474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickToSeeAlerts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:53 IST" name="tearDown" finished-at="2025-09-04T17:45:54 IST" duration-ms="587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickToSeeAlerts status=SUCCESS method=AlertsFramesWindowsTests.ClickToSeeAlerts()[pri:7, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:45:54 IST" name="setUP" finished-at="2025-09-04T17:46:00 IST" duration-ms="6010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickAcceptConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:00 IST" name="ClickAcceptConfirmationBox" finished-at="2025-09-04T17:46:01 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAcceptConfirmationBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:01 IST" name="tearDown" finished-at="2025-09-04T17:46:02 IST" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAcceptConfirmationBox status=SUCCESS method=AlertsFramesWindowsTests.ClickAcceptConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:02 IST" name="setUP" finished-at="2025-09-04T17:46:14 IST" duration-ms="12653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickDenyConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:14 IST" name="ClickDenyConfirmationBox" finished-at="2025-09-04T17:46:15 IST" duration-ms="1104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDenyConfirmationBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:15 IST" name="tearDown" finished-at="2025-09-04T17:46:16 IST" duration-ms="482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDenyConfirmationBox status=SUCCESS method=AlertsFramesWindowsTests.ClickDenyConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:16 IST" name="setUP" finished-at="2025-09-04T17:46:27 IST" duration-ms="11506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickPromptBoxFill()[pri:9, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:27 IST" name="ClickPromptBoxFill" finished-at="2025-09-04T17:46:28 IST" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickPromptBoxFill -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:28 IST" name="tearDown" finished-at="2025-09-04T17:46:29 IST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickPromptBoxFill status=SUCCESS method=AlertsFramesWindowsTests.ClickPromptBoxFill()[pri:9, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:29 IST" name="setUP" finished-at="2025-09-04T17:46:36 IST" duration-ms="7613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickFrames()[pri:10, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:36 IST" name="ClickFrames" finished-at="2025-09-04T17:46:37 IST" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickFrames -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:37 IST" name="tearDown" finished-at="2025-09-04T17:46:37 IST" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickFrames status=SUCCESS method=AlertsFramesWindowsTests.ClickFrames()[pri:10, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:37 IST" name="setUP" finished-at="2025-09-04T17:46:43 IST" duration-ms="6091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="GetFrame1()[pri:11, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:43 IST" name="GetFrame1" finished-at="2025-09-04T17:46:44 IST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFrame1 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:44 IST" name="tearDown" finished-at="2025-09-04T17:46:45 IST" duration-ms="538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFrame1 status=SUCCESS method=AlertsFramesWindowsTests.GetFrame1()[pri:11, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:45 IST" name="setUP" finished-at="2025-09-04T17:46:57 IST" duration-ms="12438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="GetFrame2()[pri:12, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:57 IST" name="GetFrame2" finished-at="2025-09-04T17:46:58 IST" duration-ms="1036" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1079)
at org.testng.Assert.assertEquals(Assert.java:1043)
at org.testng.Assert.assertEquals(Assert.java:1089)
at pages.alertsframewindowsPage.GetFrame2msg(alertsframewindowsPage.java:332)
at tests.AlertsFramesWindowsTests.GetFrame2(AlertsFramesWindowsTests.java:182)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFrame2 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:58 IST" name="tearDown" finished-at="2025-09-04T17:46:59 IST" duration-ms="840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFrame2 status=FAILURE method=AlertsFramesWindowsTests.GetFrame2()[pri:12, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:46:59 IST" name="setUP" finished-at="2025-09-04T17:47:34 IST" duration-ms="35349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickModalDialogs()[pri:13, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:47:34 IST" name="ClickModalDialogs" finished-at="2025-09-04T17:47:35 IST" duration-ms="461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickModalDialogs -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:47:35 IST" name="tearDown" finished-at="2025-09-04T17:47:35 IST" duration-ms="449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickModalDialogs status=SUCCESS method=AlertsFramesWindowsTests.ClickModalDialogs()[pri:13, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:47:35 IST" name="setUP" finished-at="2025-09-04T17:47:41 IST" duration-ms="6069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickNestedFrames()[pri:13, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:47:41 IST" name="ClickNestedFrames" finished-at="2025-09-04T17:47:42 IST" duration-ms="717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNestedFrames -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:47:42 IST" name="tearDown" finished-at="2025-09-04T17:47:43 IST" duration-ms="549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNestedFrames status=SUCCESS method=AlertsFramesWindowsTests.ClickNestedFrames()[pri:13, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:47:43 IST" name="setUP" finished-at="2025-09-04T17:48:19 IST" duration-ms="36226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickLargeModal()[pri:14, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:19 IST" name="ClickLargeModal" finished-at="2025-09-04T17:48:20 IST" duration-ms="1407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLargeModal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:20 IST" name="tearDown" finished-at="2025-09-04T17:48:21 IST" duration-ms="460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLargeModal status=SUCCESS method=AlertsFramesWindowsTests.ClickLargeModal()[pri:14, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:21 IST" name="setUP" finished-at="2025-09-04T17:48:28 IST" duration-ms="7104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="ClickSmallModal()[pri:14, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:28 IST" name="ClickSmallModal" finished-at="2025-09-04T17:48:30 IST" duration-ms="1655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSmallModal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:30 IST" name="tearDown" finished-at="2025-09-04T17:48:30 IST" duration-ms="504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickSmallModal status=SUCCESS method=AlertsFramesWindowsTests.ClickSmallModal()[pri:14, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:30 IST" name="setUP" finished-at="2025-09-04T17:48:42 IST" duration-ms="12148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="GetParentFrame()[pri:14, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:42 IST" name="GetParentFrame" finished-at="2025-09-04T17:48:46 IST" duration-ms="3846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetParentFrame -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:46 IST" name="tearDown" finished-at="2025-09-04T17:48:47 IST" duration-ms="466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetParentFrame status=SUCCESS method=AlertsFramesWindowsTests.GetParentFrame()[pri:14, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUP()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:48:47 IST" name="setUP" finished-at="2025-09-04T17:49:00 IST" duration-ms="13214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="GetChildFrame()[pri:15, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:49:00 IST" name="GetChildFrame" finished-at="2025-09-04T17:49:01 IST" duration-ms="1221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetChildFrame -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T17:49:01 IST" name="tearDown" finished-at="2025-09-04T17:49:02 IST" duration-ms="872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetChildFrame status=SUCCESS method=AlertsFramesWindowsTests.GetChildFrame()[pri:15, instance:tests.AlertsFramesWindowsTests@68df9280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="teardownReport()[pri:0, instance:tests.AlertsFramesWindowsTests@68df9280]" started-at="2025-09-04T18:15:55 IST" name="teardownReport" finished-at="2025-09-04T18:16:02 IST" duration-ms="7605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownReport -->
      </class> <!-- tests.AlertsFramesWindowsTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
