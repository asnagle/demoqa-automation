<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="128" passed="125" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-19T12:00:12 IST" name="Surefire suite" finished-at="2025-09-19T13:04:39 IST" duration-ms="3866701">
    <groups>
    </groups>
    <test started-at="2025-09-19T12:00:12 IST" name="Surefire test" finished-at="2025-09-19T13:04:39 IST" duration-ms="3866701">
      <class name="tests.FormTests">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:45:41 IST" name="setup" finished-at="2025-09-19T12:45:57 IST" duration-ms="15487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.FormsCard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="FormsCard()[pri:1, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:45:57 IST" name="FormsCard" finished-at="2025-09-19T12:45:58 IST" duration-ms="974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FormsCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:45:58 IST" name="tearDown" finished-at="2025-09-19T12:45:58 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FormsCard status=SUCCESS method=FormTests.FormsCard()[pri:1, instance:tests.FormTests@5be46f9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:45:58 IST" name="setup" finished-at="2025-09-19T12:46:33 IST" duration-ms="35138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.FormButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="FormButton()[pri:2, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:46:33 IST" name="FormButton" finished-at="2025-09-19T12:46:34 IST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FormButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:46:34 IST" name="tearDown" finished-at="2025-09-19T12:46:34 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FormButton status=SUCCESS method=FormTests.FormButton()[pri:2, instance:tests.FormTests@5be46f9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:46:34 IST" name="setup" finished-at="2025-09-19T12:46:47 IST" duration-ms="13544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:46:47 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-19T12:46:53 IST" duration-ms="5991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Johny', lastName='Bravo', userMail='Jbravo@demoqa.com', gender='Male', mobile='9.238343488E9', dob='15/08/2000', dobTime='6:45:00 am', subject='Computer Science', hobbies='Sports,Music', picturePath='/TestData/Mphoto.jpg', address='511 Grant 481, Prattsville\n Arkansas 72129\n United States', state='NCR', city='Delhi'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:46:53 IST" name="tearDown" finished-at="2025-09-19T12:46:54 IST" duration-ms="695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:46:54 IST" name="setup" finished-at="2025-09-19T12:47:01 IST" duration-ms="6638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:01 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-19T12:47:07 IST" duration-ms="5946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Gene', lastName='Femina', userMail='GFemina@demoqa.com', gender='Female', mobile='1.888343432E9', dob='22/05/2002', dobTime='4:30:00 pm', subject='Accounting', hobbies='Music,Reading', picturePath='/TestData/Fphoto.png', address='512 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Uttar Pradesh', city='Merrut'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:07 IST" name="tearDown" finished-at="2025-09-19T12:47:08 IST" duration-ms="1369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:08 IST" name="setup" finished-at="2025-09-19T12:47:14 IST" duration-ms="5573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:14 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-19T12:47:20 IST" duration-ms="6795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Bud', lastName='Wisem', userMail='BWisem@demoqa.com', gender='Other', mobile='8.932465432E9', dob='31/12/1999', dobTime='8:45:00 pm', subject='Biology', hobbies='Reading', picturePath='/TestData/Ophoto.jpg', address='513 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Haryana', city='Panipat'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:20 IST" name="tearDown" finished-at="2025-09-19T12:47:21 IST" duration-ms="551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:21 IST" name="setup" finished-at="2025-09-19T12:47:35 IST" duration-ms="14367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FormTests.fillForm(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:35 IST" name="fillForm" data-provider="UserFormData" finished-at="2025-09-19T12:47:41 IST" duration-ms="5849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Tom', lastName='Boss', userMail='TBoss@demoqa.com', gender='Male', mobile='7.839875281E9', dob='1/26/03', dobTime='5:45:00 am', subject='Social Studies', hobbies='Sports,Reading', picturePath='/TestData/M2photo.jpg', address='514 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Rajasthan', city='Jaiselmer'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.FormTests@5be46f9d]" started-at="2025-09-19T12:47:41 IST" name="tearDown" finished-at="2025-09-19T12:47:42 IST" duration-ms="639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillForm status=SUCCESS method=FormTests.fillForm(models.UserFormData)[pri:3, instance:tests.FormTests@5be46f9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.FormTests -->
      <class name="tests.WidgetsTests">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:47:42 IST" name="setup" finished-at="2025-09-19T12:47:48 IST" duration-ms="6097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.accessWidgets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="accessWidgets()[pri:1, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:47:48 IST" name="accessWidgets" finished-at="2025-09-19T12:47:48 IST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessWidgets -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:47:48 IST" name="tearDown" finished-at="2025-09-19T12:47:49 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessWidgets status=SUCCESS method=WidgetsTests.accessWidgets()[pri:1, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:47:49 IST" name="setup" finished-at="2025-09-19T12:47:54 IST" duration-ms="5719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.Accordian()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Accordian()[pri:2, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:47:54 IST" name="Accordian" finished-at="2025-09-19T12:47:55 IST" duration-ms="443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Accordian -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:47:55 IST" name="tearDown" finished-at="2025-09-19T12:47:55 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Accordian status=SUCCESS method=WidgetsTests.Accordian()[pri:2, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:47:55 IST" name="setup" finished-at="2025-09-19T12:48:09 IST" duration-ms="14234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AccessWhatis()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AccessWhatis()[pri:3, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:09 IST" name="AccessWhatis" finished-at="2025-09-19T12:48:10 IST" duration-ms="829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhatis -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:10 IST" name="tearDown" finished-at="2025-09-19T12:48:10 IST" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhatis status=SUCCESS method=WidgetsTests.AccessWhatis()[pri:3, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:10 IST" name="setup" finished-at="2025-09-19T12:48:21 IST" duration-ms="10570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AccessWhereDoes()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AccessWhereDoes()[pri:4, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:21 IST" name="AccessWhereDoes" finished-at="2025-09-19T12:48:22 IST" duration-ms="1235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhereDoes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:22 IST" name="tearDown" finished-at="2025-09-19T12:48:22 IST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhereDoes status=SUCCESS method=WidgetsTests.AccessWhereDoes()[pri:4, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:22 IST" name="setup" finished-at="2025-09-19T12:48:36 IST" duration-ms="13081" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AccessWhyDoWe()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AccessWhyDoWe()[pri:5, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:36 IST" name="AccessWhyDoWe" finished-at="2025-09-19T12:48:37 IST" duration-ms="1316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccessWhyDoWe -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:37 IST" name="tearDown" finished-at="2025-09-19T12:48:37 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccessWhyDoWe status=SUCCESS method=WidgetsTests.AccessWhyDoWe()[pri:5, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:37 IST" name="setup" finished-at="2025-09-19T12:48:43 IST" duration-ms="5654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoComplete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoComplete()[pri:6, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:43 IST" name="AutoComplete" finished-at="2025-09-19T12:48:43 IST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoComplete -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:43 IST" name="tearDown" finished-at="2025-09-19T12:48:43 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoComplete status=SUCCESS method=WidgetsTests.AutoComplete()[pri:6, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:43 IST" name="setup" finished-at="2025-09-19T12:48:51 IST" duration-ms="7634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:51 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:48:53 IST" duration-ms="1559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='A', expectedColors=[Black, Magenta, Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:53 IST" name="tearDown" finished-at="2025-09-19T12:48:53 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:48:53 IST" name="setup" finished-at="2025-09-19T12:49:05 IST" duration-ms="12260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:49:05 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:49:07 IST" duration-ms="1608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='B', expectedColors=[Blue, Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:49:07 IST" name="tearDown" finished-at="2025-09-19T12:54:10 IST" duration-ms="302755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:10 IST" name="setup" finished-at="2025-09-19T12:54:16 IST" duration-ms="6471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:16 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:54:17 IST" duration-ms="1080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='C', expectedColors=[Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:17 IST" name="tearDown" finished-at="2025-09-19T12:54:18 IST" duration-ms="439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:18 IST" name="setup" finished-at="2025-09-19T12:54:23 IST" duration-ms="5790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:23 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:54:25 IST" duration-ms="1579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='D', expectedColors=[Red, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:25 IST" name="tearDown" finished-at="2025-09-19T12:54:25 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:25 IST" name="setup" finished-at="2025-09-19T12:54:31 IST" duration-ms="5741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:31 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:54:34 IST" duration-ms="3162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='E', expectedColors=[Red, Blue, Green, Yellow, Purple, White, Voilet, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:34 IST" name="tearDown" finished-at="2025-09-19T12:54:35 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:35 IST" name="setup" finished-at="2025-09-19T12:54:40 IST" duration-ms="5864" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:40 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:54:42 IST" duration-ms="1876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='G', expectedColors=[Green, Indigo, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:42 IST" name="tearDown" finished-at="2025-09-19T12:54:43 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:54:43 IST" name="setup" finished-at="2025-09-19T12:55:00 IST" duration-ms="17031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:00 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:55:01 IST" duration-ms="1296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='H', expectedColors=[White]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:01 IST" name="tearDown" finished-at="2025-09-19T12:55:01 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:01 IST" name="setup" finished-at="2025-09-19T12:55:12 IST" duration-ms="10505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:12 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:55:13 IST" duration-ms="1505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='I', expectedColors=[White, Voilet, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:13 IST" name="tearDown" finished-at="2025-09-19T12:55:14 IST" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:14 IST" name="setup" finished-at="2025-09-19T12:55:20 IST" duration-ms="6171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:20 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:55:21 IST" duration-ms="1124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='K', expectedColors=[Black]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:21 IST" name="tearDown" finished-at="2025-09-19T12:55:21 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:21 IST" name="setup" finished-at="2025-09-19T12:55:27 IST" duration-ms="5537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:27 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:55:29 IST" duration-ms="2302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='L', expectedColors=[Blue, Yellow, Purple, Black, Voilet]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:29 IST" name="tearDown" finished-at="2025-09-19T12:55:29 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:29 IST" name="setup" finished-at="2025-09-19T12:55:36 IST" duration-ms="6259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:36 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:55:37 IST" duration-ms="989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='M', expectedColors=[Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:37 IST" name="tearDown" finished-at="2025-09-19T12:55:37 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:37 IST" name="setup" finished-at="2025-09-19T12:55:51 IST" duration-ms="13950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:51 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:55:53 IST" duration-ms="1780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='N', expectedColors=[Green, Indigo, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:53 IST" name="tearDown" finished-at="2025-09-19T12:55:53 IST" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:55:53 IST" name="setup" finished-at="2025-09-19T12:56:04 IST" duration-ms="10404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:04 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:56:06 IST" duration-ms="2026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='O', expectedColors=[Yellow, Voilet, Indigo]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:06 IST" name="tearDown" finished-at="2025-09-19T12:56:06 IST" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:06 IST" name="setup" finished-at="2025-09-19T12:56:13 IST" duration-ms="7273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:13 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:56:14 IST" duration-ms="1137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='P', expectedColors=[Purple]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:14 IST" name="tearDown" finished-at="2025-09-19T12:56:15 IST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:15 IST" name="setup" finished-at="2025-09-19T12:56:21 IST" duration-ms="5859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:21 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:56:22 IST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='Q', expectedColors=[Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:22 IST" name="tearDown" finished-at="2025-09-19T12:56:22 IST" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:22 IST" name="setup" finished-at="2025-09-19T12:56:35 IST" duration-ms="13016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:35 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:56:37 IST" duration-ms="1760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='R', expectedColors=[Red, Green, Purple]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:37 IST" name="tearDown" finished-at="2025-09-19T12:56:37 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:37 IST" name="setup" finished-at="2025-09-19T12:56:43 IST" duration-ms="5521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:43 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:56:44 IST" duration-ms="1594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='T', expectedColors=[White, Voilet, Magenta]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:44 IST" name="tearDown" finished-at="2025-09-19T12:56:45 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:45 IST" name="setup" finished-at="2025-09-19T12:56:57 IST" duration-ms="12211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:57 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:56:58 IST" duration-ms="1528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='U', expectedColors=[Blue, Purple, Aqua]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:58 IST" name="tearDown" finished-at="2025-09-19T12:56:59 IST" duration-ms="355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:56:59 IST" name="setup" finished-at="2025-09-19T12:57:14 IST" duration-ms="15264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:14 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:57:15 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='V', expectedColors=[Voilet]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:15 IST" name="tearDown" finished-at="2025-09-19T12:57:15 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:15 IST" name="setup" finished-at="2025-09-19T12:57:21 IST" duration-ms="5780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:21 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:57:22 IST" duration-ms="1324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='W', expectedColors=[Yellow, White]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:22 IST" name="tearDown" finished-at="2025-09-19T12:57:23 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:23 IST" name="setup" finished-at="2025-09-19T12:57:56 IST" duration-ms="33219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:56 IST" name="AutoCompleteSearch" data-provider="ColorSelectionData" finished-at="2025-09-19T12:57:57 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='Y', expectedColors=[Yellow]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:57 IST" name="tearDown" finished-at="2025-09-19T12:57:57 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearch status=SUCCESS method=WidgetsTests.AutoCompleteSearch(models.ColorSelectionData)[pri:7, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:57:57 IST" name="setup" finished-at="2025-09-19T12:58:03 IST" duration-ms="5825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSearchRemove(models.ColorSelectionData) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSearchRemove(models.ColorSelectionData)[pri:8, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:58:03 IST" name="AutoCompleteSearchRemove" data-provider="ColorSelectionDataRemove" finished-at="2025-09-19T12:58:09 IST" duration-ms="5905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ColorSelectionData{searchFor='E', expectedColors=[Green, Yellow]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSearchRemove -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T12:58:09 IST" name="tearDown" finished-at="2025-09-19T13:03:12 IST" duration-ms="302803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSearchRemove status=SUCCESS method=WidgetsTests.AutoCompleteSearchRemove(models.ColorSelectionData)[pri:8, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:03:12 IST" name="setup" finished-at="2025-09-19T13:03:26 IST" duration-ms="14343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.AutoCompleteSingle(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AutoCompleteSingle(java.lang.String,java.lang.String)[pri:9, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:03:26 IST" name="AutoCompleteSingle" data-provider="SingleColorData" finished-at="2025-09-19T13:03:30 IST" duration-ms="4229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Green]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutoCompleteSingle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:03:30 IST" name="tearDown" finished-at="2025-09-19T13:03:31 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AutoCompleteSingle status=SUCCESS method=WidgetsTests.AutoCompleteSingle(java.lang.String,java.lang.String)[pri:9, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:03:31 IST" name="setup" finished-at="2025-09-19T13:03:37 IST" duration-ms="6581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.SingleAddRemove(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SingleAddRemove(java.lang.String,java.lang.String)[pri:10, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:03:37 IST" name="SingleAddRemove" data-provider="SingleColorData" finished-at="2025-09-19T13:03:42 IST" duration-ms="4186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Green]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleAddRemove -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:03:42 IST" name="tearDown" finished-at="2025-09-19T13:03:42 IST" duration-ms="793" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SingleAddRemove status=SUCCESS method=WidgetsTests.SingleAddRemove(java.lang.String,java.lang.String)[pri:10, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:03:42 IST" name="setup" finished-at="2025-09-19T13:04:06 IST" duration-ms="23814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.ClickDatePicker()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickDatePicker()[pri:11, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:06 IST" name="ClickDatePicker" finished-at="2025-09-19T13:04:07 IST" duration-ms="403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDatePicker -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:07 IST" name="tearDown" finished-at="2025-09-19T13:04:07 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDatePicker status=SUCCESS method=WidgetsTests.ClickDatePicker()[pri:11, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:07 IST" name="setup" finished-at="2025-09-19T13:04:14 IST" duration-ms="7276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.SelectDate(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:14 IST" name="SelectDate" data-provider="DateSource" finished-at="2025-09-19T13:04:15 IST" duration-ms="875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Johny', lastName='Bravo', userMail='Jbravo@demoqa.com', gender='Male', mobile='9.238343488E9', dob='15/08/2000', dobTime='6:45:00 am', subject='Computer Science', hobbies='Sports,Music', picturePath='/TestData/Mphoto.jpg', address='511 Grant 481, Prattsville\n Arkansas 72129\n United States', state='NCR', city='Delhi'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectDate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:15 IST" name="tearDown" finished-at="2025-09-19T13:04:15 IST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectDate status=SUCCESS method=WidgetsTests.SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:15 IST" name="setup" finished-at="2025-09-19T13:04:23 IST" duration-ms="7631" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.SelectDate(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:23 IST" name="SelectDate" data-provider="DateSource" finished-at="2025-09-19T13:04:24 IST" duration-ms="933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Gene', lastName='Femina', userMail='GFemina@demoqa.com', gender='Female', mobile='1.888343432E9', dob='22/05/2002', dobTime='4:30:00 pm', subject='Accounting', hobbies='Music,Reading', picturePath='/TestData/Fphoto.png', address='512 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Uttar Pradesh', city='Merrut'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectDate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:24 IST" name="tearDown" finished-at="2025-09-19T13:04:24 IST" duration-ms="285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectDate status=SUCCESS method=WidgetsTests.SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:24 IST" name="setup" finished-at="2025-09-19T13:04:31 IST" duration-ms="6279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.SelectDate(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:31 IST" name="SelectDate" data-provider="DateSource" finished-at="2025-09-19T13:04:32 IST" duration-ms="1025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Bud', lastName='Wisem', userMail='BWisem@demoqa.com', gender='Other', mobile='8.932465432E9', dob='31/12/1999', dobTime='8:45:00 pm', subject='Biology', hobbies='Reading', picturePath='/TestData/Ophoto.jpg', address='513 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Haryana', city='Panipat'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectDate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:32 IST" name="tearDown" finished-at="2025-09-19T13:04:32 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectDate status=SUCCESS method=WidgetsTests.SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:32 IST" name="setup" finished-at="2025-09-19T13:04:37 IST" duration-ms="5536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.WidgetsTests.SelectDate(models.UserFormData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:37 IST" name="SelectDate" data-provider="DateSource" finished-at="2025-09-19T13:04:39 IST" duration-ms="1245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserFormData{firstName='Tom', lastName='Boss', userMail='TBoss@demoqa.com', gender='Male', mobile='7.839875281E9', dob='1/26/03', dobTime='5:45:00 am', subject='Social Studies', hobbies='Sports,Reading', picturePath='/TestData/M2photo.jpg', address='514 Grant 481, Prattsville\n Arkansas 72129\n United States', state='Rajasthan', city='Jaiselmer'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectDate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.WidgetsTests@3f91b517]" started-at="2025-09-19T13:04:39 IST" name="tearDown" finished-at="2025-09-19T13:04:39 IST" duration-ms="354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectDate status=SUCCESS method=WidgetsTests.SelectDate(models.UserFormData)[pri:12, instance:tests.WidgetsTests@3f91b517] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.WidgetsTests -->
      <class name="tests.ElementsTests">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:07:18 IST" name="setup" finished-at="2025-09-19T12:07:24 IST" duration-ms="5708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ElementsCard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ElementsCard()[pri:1, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:07:24 IST" name="ElementsCard" finished-at="2025-09-19T12:07:24 IST" duration-ms="475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ElementsCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:07:24 IST" name="tearDown" finished-at="2025-09-19T12:07:24 IST" duration-ms="365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ElementsCard status=SUCCESS method=ElementsTests.ElementsCard()[pri:1, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:07:25 IST" name="setup" finished-at="2025-09-19T12:07:42 IST" duration-ms="16748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:07:42 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-19T12:07:44 IST" duration-ms="1730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', currentAddress='301 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='511 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:07:44 IST" name="tearDown" finished-at="2025-09-19T12:12:48 IST" duration-ms="304348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:12:48 IST" name="setup" finished-at="2025-09-19T12:12:54 IST" duration-ms="6145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:12:54 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-19T12:12:56 IST" duration-ms="1777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Gene', lastName='Femina', email='GFemina@demoqa.com', currentAddress='302 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='512 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:12:56 IST" name="tearDown" finished-at="2025-09-19T12:12:56 IST" duration-ms="494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:12:56 IST" name="setup" finished-at="2025-09-19T12:13:02 IST" duration-ms="5988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:02 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-19T12:13:04 IST" duration-ms="1952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Bud', lastName='Wisem', email='BWisem@demoqa.com', currentAddress='303 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='513 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:04 IST" name="tearDown" finished-at="2025-09-19T12:13:05 IST" duration-ms="610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:05 IST" name="setup" finished-at="2025-09-19T12:13:11 IST" duration-ms="6527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.TextBox(models.TextBoxUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:11 IST" name="TextBox" data-provider="TextBoxUserData" finished-at="2025-09-19T12:13:13 IST" duration-ms="1814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TextBoxUser{firstName='Tom', lastName='Boss', email='TBoss@demoqa.com', currentAddress='304 Town 481, Brookville\n kansas 42129\n United States', permanentAddress='514 Grant 481, Prattsville\n Arkansas 72129\n United States'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TextBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:13 IST" name="tearDown" finished-at="2025-09-19T12:13:14 IST" duration-ms="563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TextBox status=SUCCESS method=ElementsTests.TextBox(models.TextBoxUser)[pri:2, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:14 IST" name="setup" finished-at="2025-09-19T12:13:50 IST" duration-ms="36566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.CheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CheckBox()[pri:3, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:50 IST" name="CheckBox" finished-at="2025-09-19T12:13:51 IST" duration-ms="786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:51 IST" name="tearDown" finished-at="2025-09-19T12:13:51 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckBox status=SUCCESS method=ElementsTests.CheckBox()[pri:3, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:51 IST" name="setup" finished-at="2025-09-19T12:13:58 IST" duration-ms="6926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingHomeCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingHomeCheckBox()[pri:4, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:58 IST" name="SelectingHomeCheckBox" finished-at="2025-09-19T12:13:59 IST" duration-ms="1071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingHomeCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:13:59 IST" name="tearDown" finished-at="2025-09-19T12:14:00 IST" duration-ms="450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingHomeCheckBox status=SUCCESS method=ElementsTests.SelectingHomeCheckBox()[pri:4, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:00 IST" name="setup" finished-at="2025-09-19T12:14:06 IST" duration-ms="5804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingDesktopCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingDesktopCheckBox()[pri:5, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:06 IST" name="SelectingDesktopCheckBox" finished-at="2025-09-19T12:14:07 IST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDesktopCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:07 IST" name="tearDown" finished-at="2025-09-19T12:14:07 IST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDesktopCheckBox status=SUCCESS method=ElementsTests.SelectingDesktopCheckBox()[pri:5, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:07 IST" name="setup" finished-at="2025-09-19T12:14:39 IST" duration-ms="31704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingNotesCommandsClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingNotesCommandsClick()[pri:6, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:39 IST" name="SelectingNotesCommandsClick" finished-at="2025-09-19T12:14:41 IST" duration-ms="1584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingNotesCommandsClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:41 IST" name="tearDown" finished-at="2025-09-19T12:14:41 IST" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingNotesCommandsClick status=SUCCESS method=ElementsTests.SelectingNotesCommandsClick()[pri:6, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:41 IST" name="setup" finished-at="2025-09-19T12:14:47 IST" duration-ms="5573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingDocumentsCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingDocumentsCheckBox()[pri:7, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:47 IST" name="SelectingDocumentsCheckBox" finished-at="2025-09-19T12:14:48 IST" duration-ms="928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDocumentsCheckBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:48 IST" name="tearDown" finished-at="2025-09-19T12:14:48 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDocumentsCheckBox status=SUCCESS method=ElementsTests.SelectingDocumentsCheckBox()[pri:7, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:14:48 IST" name="setup" finished-at="2025-09-19T12:15:02 IST" duration-ms="14355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingWorkSpace()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingWorkSpace()[pri:8, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:02 IST" name="SelectingWorkSpace" finished-at="2025-09-19T12:15:03 IST" duration-ms="1095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingWorkSpace -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:03 IST" name="tearDown" finished-at="2025-09-19T12:15:04 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingWorkSpace status=SUCCESS method=ElementsTests.SelectingWorkSpace()[pri:8, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:04 IST" name="setup" finished-at="2025-09-19T12:15:09 IST" duration-ms="5309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectReact()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectReact()[pri:9, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:09 IST" name="SelectReact" finished-at="2025-09-19T12:15:10 IST" duration-ms="1321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReact -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:10 IST" name="tearDown" finished-at="2025-09-19T12:15:11 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectReact status=SUCCESS method=ElementsTests.SelectReact()[pri:9, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:11 IST" name="setup" finished-at="2025-09-19T12:15:16 IST" duration-ms="5407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectAngular()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectAngular()[pri:10, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:16 IST" name="SelectAngular" finished-at="2025-09-19T12:15:17 IST" duration-ms="1321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectAngular -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:17 IST" name="tearDown" finished-at="2025-09-19T12:15:18 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectAngular status=SUCCESS method=ElementsTests.SelectAngular()[pri:10, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:18 IST" name="setup" finished-at="2025-09-19T12:15:35 IST" duration-ms="17292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectVeu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectVeu()[pri:11, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:35 IST" name="SelectVeu" finished-at="2025-09-19T12:15:36 IST" duration-ms="1255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectVeu -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:36 IST" name="tearDown" finished-at="2025-09-19T12:15:37 IST" duration-ms="797" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectVeu status=SUCCESS method=ElementsTests.SelectVeu()[pri:11, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:37 IST" name="setup" finished-at="2025-09-19T12:15:43 IST" duration-ms="5853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectReactAnuglarVeu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectReactAnuglarVeu()[pri:12, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:43 IST" name="SelectReactAnuglarVeu" finished-at="2025-09-19T12:15:45 IST" duration-ms="1794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectReactAnuglarVeu -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:45 IST" name="tearDown" finished-at="2025-09-19T12:15:45 IST" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectReactAnuglarVeu status=SUCCESS method=ElementsTests.SelectReactAnuglarVeu()[pri:12, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:45 IST" name="setup" finished-at="2025-09-19T12:15:50 IST" duration-ms="5381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingOffice()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingOffice()[pri:13, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:50 IST" name="SelectingOffice" finished-at="2025-09-19T12:15:51 IST" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingOffice -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:51 IST" name="tearDown" finished-at="2025-09-19T12:15:52 IST" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingOffice status=SUCCESS method=ElementsTests.SelectingOffice()[pri:13, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:15:52 IST" name="setup" finished-at="2025-09-19T12:16:18 IST" duration-ms="26742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectPublic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectPublic()[pri:14, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:16:18 IST" name="SelectPublic" finished-at="2025-09-19T12:16:20 IST" duration-ms="1140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectPublic -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:16:20 IST" name="tearDown" finished-at="2025-09-19T12:16:20 IST" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectPublic status=SUCCESS method=ElementsTests.SelectPublic()[pri:14, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:16:20 IST" name="setup" finished-at="2025-09-19T12:16:34 IST" duration-ms="14005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectPrivate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectPrivate()[pri:15, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:16:34 IST" name="SelectPrivate" finished-at="2025-09-19T12:16:35 IST" duration-ms="1437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectPrivate -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:16:35 IST" name="tearDown" finished-at="2025-09-19T12:16:36 IST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectPrivate status=SUCCESS method=ElementsTests.SelectPrivate()[pri:15, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:16:36 IST" name="setup" finished-at="2025-09-19T12:17:08 IST" duration-ms="32067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectClassified()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectClassified()[pri:16, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:08 IST" name="SelectClassified" finished-at="2025-09-19T12:17:09 IST" duration-ms="1180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectClassified -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:09 IST" name="tearDown" finished-at="2025-09-19T12:17:09 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectClassified status=SUCCESS method=ElementsTests.SelectClassified()[pri:16, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:09 IST" name="setup" finished-at="2025-09-19T12:17:16 IST" duration-ms="6694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectGeneral()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectGeneral()[pri:17, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:16 IST" name="SelectGeneral" finished-at="2025-09-19T12:17:17 IST" duration-ms="1349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectGeneral -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:17 IST" name="tearDown" finished-at="2025-09-19T12:17:18 IST" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectGeneral status=SUCCESS method=ElementsTests.SelectGeneral()[pri:17, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:18 IST" name="setup" finished-at="2025-09-19T12:17:24 IST" duration-ms="6421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectOfficeAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectOfficeAll()[pri:18, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:24 IST" name="SelectOfficeAll" finished-at="2025-09-19T12:17:26 IST" duration-ms="1719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectOfficeAll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:26 IST" name="tearDown" finished-at="2025-09-19T12:17:26 IST" duration-ms="347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectOfficeAll status=SUCCESS method=ElementsTests.SelectOfficeAll()[pri:18, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:26 IST" name="setup" finished-at="2025-09-19T12:17:43 IST" duration-ms="16701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingDownloads()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingDownloads()[pri:19, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:43 IST" name="SelectingDownloads" finished-at="2025-09-19T12:17:44 IST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingDownloads -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:17:44 IST" name="tearDown" finished-at="2025-09-19T12:22:47 IST" duration-ms="302847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingDownloads status=SUCCESS method=ElementsTests.SelectingDownloads()[pri:19, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:22:47 IST" name="setup" finished-at="2025-09-19T12:22:52 IST" duration-ms="5680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingWordFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingWordFile()[pri:20, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:22:52 IST" name="SelectingWordFile" finished-at="2025-09-19T12:22:54 IST" duration-ms="1181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingWordFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:22:54 IST" name="tearDown" finished-at="2025-09-19T12:22:54 IST" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingWordFile status=SUCCESS method=ElementsTests.SelectingWordFile()[pri:20, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:22:54 IST" name="setup" finished-at="2025-09-19T12:23:09 IST" duration-ms="15465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingExcelFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingExcelFile()[pri:21, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:09 IST" name="SelectingExcelFile" finished-at="2025-09-19T12:23:11 IST" duration-ms="1064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingExcelFile -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:11 IST" name="tearDown" finished-at="2025-09-19T12:23:11 IST" duration-ms="318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingExcelFile status=SUCCESS method=ElementsTests.SelectingExcelFile()[pri:21, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:11 IST" name="setup" finished-at="2025-09-19T12:23:25 IST" duration-ms="13952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectingAllFiles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectingAllFiles()[pri:22, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:25 IST" name="SelectingAllFiles" finished-at="2025-09-19T12:23:26 IST" duration-ms="1351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectingAllFiles -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:26 IST" name="tearDown" finished-at="2025-09-19T12:23:27 IST" duration-ms="367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectingAllFiles status=SUCCESS method=ElementsTests.SelectingAllFiles()[pri:22, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:27 IST" name="setup" finished-at="2025-09-19T12:23:52 IST" duration-ms="25602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.clickRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="clickRadioButton()[pri:23, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:52 IST" name="clickRadioButton" finished-at="2025-09-19T12:23:53 IST" duration-ms="611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:53 IST" name="tearDown" finished-at="2025-09-19T12:23:53 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickRadioButton status=SUCCESS method=ElementsTests.clickRadioButton()[pri:23, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:23:53 IST" name="setup" finished-at="2025-09-19T12:24:13 IST" duration-ms="19903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectYesRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectYesRadioButton()[pri:24, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:13 IST" name="SelectYesRadioButton" finished-at="2025-09-19T12:24:14 IST" duration-ms="983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectYesRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:14 IST" name="tearDown" finished-at="2025-09-19T12:24:15 IST" duration-ms="779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectYesRadioButton status=SUCCESS method=ElementsTests.SelectYesRadioButton()[pri:24, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:15 IST" name="setup" finished-at="2025-09-19T12:24:51 IST" duration-ms="36526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.SelectImpressiveRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SelectImpressiveRadioButton()[pri:25, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:51 IST" name="SelectImpressiveRadioButton" finished-at="2025-09-19T12:24:52 IST" duration-ms="922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectImpressiveRadioButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:52 IST" name="tearDown" finished-at="2025-09-19T12:24:52 IST" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectImpressiveRadioButton status=SUCCESS method=ElementsTests.SelectImpressiveRadioButton()[pri:25, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:52 IST" name="setup" finished-at="2025-09-19T12:24:58 IST" duration-ms="6045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.WebTablesClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="WebTablesClick()[pri:26, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:58 IST" name="WebTablesClick" finished-at="2025-09-19T12:24:59 IST" duration-ms="568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebTablesClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:24:59 IST" name="tearDown" finished-at="2025-09-19T12:25:00 IST" duration-ms="1044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WebTablesClick status=SUCCESS method=ElementsTests.WebTablesClick()[pri:26, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:00 IST" name="setup" finished-at="2025-09-19T12:25:14 IST" duration-ms="13475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:14 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-19T12:25:16 IST" duration-ms="2477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:16 IST" name="tearDown" finished-at="2025-09-19T12:25:16 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:16 IST" name="setup" finished-at="2025-09-19T12:25:23 IST" duration-ms="6354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:23 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-19T12:25:25 IST" duration-ms="2538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Gene', lastName='Femina', email='GFemina@demoqa.com', salary=180000, age=300, department='Finance'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:25 IST" name="tearDown" finished-at="2025-09-19T12:25:26 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:26 IST" name="setup" finished-at="2025-09-19T12:25:59 IST" duration-ms="33034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:25:59 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-19T12:26:02 IST" duration-ms="2968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Bud', lastName='Wisem', email='BWisem@demoqa.com', salary=150000, age=400, department='Medicine'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:02 IST" name="tearDown" finished-at="2025-09-19T12:26:02 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:02 IST" name="setup" finished-at="2025-09-19T12:26:09 IST" duration-ms="6951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableNewRegistration(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:09 IST" name="webTableNewRegistration" data-provider="WebTableUserData" finished-at="2025-09-19T12:26:11 IST" duration-ms="2453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tom', lastName='Boss', email='TBoss@demoqa.com', salary=190000, age=420, department='Recreation'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableNewRegistration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:11 IST" name="tearDown" finished-at="2025-09-19T12:26:12 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableNewRegistration status=SUCCESS method=ElementsTests.webTableNewRegistration(models.WebTableUser)[pri:27, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:12 IST" name="setup" finished-at="2025-09-19T12:26:43 IST" duration-ms="31054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableAddSearch(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableAddSearch(models.WebTableUser)[pri:28, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:43 IST" name="webTableAddSearch" data-provider="WTFormDataEdit" finished-at="2025-09-19T12:26:46 IST" duration-ms="2667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:46 IST" name="tearDown" finished-at="2025-09-19T12:26:46 IST" duration-ms="342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddSearch status=SUCCESS method=ElementsTests.webTableAddSearch(models.WebTableUser)[pri:28, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:46 IST" name="setup" finished-at="2025-09-19T12:26:52 IST" duration-ms="5717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableAddEditFirstName(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableAddEditFirstName(models.WebTableUser)[pri:29, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:52 IST" name="webTableAddEditFirstName" data-provider="WTFormDataEdit" finished-at="2025-09-19T12:26:56 IST" duration-ms="4124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tonny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddEditFirstName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:56 IST" name="tearDown" finished-at="2025-09-19T12:26:56 IST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddEditFirstName status=SUCCESS method=ElementsTests.webTableAddEditFirstName(models.WebTableUser)[pri:29, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:26:56 IST" name="setup" finished-at="2025-09-19T12:27:28 IST" duration-ms="31642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableAddSearchEdit(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableAddSearchEdit(models.WebTableUser)[pri:30, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:27:28 IST" name="webTableAddSearchEdit" data-provider="WTFormDataEdit" finished-at="2025-09-19T12:27:32 IST" duration-ms="4181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Tonny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableAddSearchEdit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:27:32 IST" name="tearDown" finished-at="2025-09-19T12:27:32 IST" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableAddSearchEdit status=SUCCESS method=ElementsTests.webTableAddSearchEdit(models.WebTableUser)[pri:30, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:27:32 IST" name="setup" finished-at="2025-09-19T12:27:47 IST" duration-ms="14337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.webTableDeleteUser(models.WebTableUser)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="webTableDeleteUser(models.WebTableUser)[pri:31, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:27:47 IST" name="webTableDeleteUser" data-provider="WTFormDataEdit" finished-at="2025-09-19T12:27:50 IST" duration-ms="2784" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WebTableUser{firstName='Johny', lastName='Bravo', email='Jbravo@demoqa.com', salary=280000, age=340, department='Information Technology'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webTableDeleteUser -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:27:50 IST" name="tearDown" finished-at="2025-09-19T12:27:50 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=webTableDeleteUser status=SUCCESS method=ElementsTests.webTableDeleteUser(models.WebTableUser)[pri:31, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:27:50 IST" name="setup" finished-at="2025-09-19T12:27:55 IST" duration-ms="5212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.testAddAllUsersFromExcel() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddAllUsersFromExcel()[pri:32, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:27:55 IST" name="testAddAllUsersFromExcel" finished-at="2025-09-19T12:28:02 IST" duration-ms="7054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllUsersFromExcel -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:02 IST" name="tearDown" finished-at="2025-09-19T12:28:03 IST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddAllUsersFromExcel status=SUCCESS method=ElementsTests.testAddAllUsersFromExcel()[pri:32, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:03 IST" name="setup" finished-at="2025-09-19T12:28:09 IST" duration-ms="5771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.testAddAllUsersSearchEdit() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddAllUsersSearchEdit()[pri:33, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:09 IST" name="testAddAllUsersSearchEdit" finished-at="2025-09-19T12:28:19 IST" duration-ms="10277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllUsersSearchEdit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:19 IST" name="tearDown" finished-at="2025-09-19T12:28:19 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddAllUsersSearchEdit status=SUCCESS method=ElementsTests.testAddAllUsersSearchEdit()[pri:33, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:19 IST" name="setup" finished-at="2025-09-19T12:28:25 IST" duration-ms="6002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.EditSalaryDepartment() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="EditSalaryDepartment()[pri:34, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:25 IST" name="EditSalaryDepartment" finished-at="2025-09-19T12:28:39 IST" duration-ms="14032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditSalaryDepartment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:39 IST" name="tearDown" finished-at="2025-09-19T12:28:40 IST" duration-ms="780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditSalaryDepartment status=SUCCESS method=ElementsTests.EditSalaryDepartment()[pri:34, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:40 IST" name="setup" finished-at="2025-09-19T12:28:55 IST" duration-ms="15437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.Buttons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Buttons()[pri:35, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:55 IST" name="Buttons" finished-at="2025-09-19T12:28:56 IST" duration-ms="602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Buttons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:56 IST" name="tearDown" finished-at="2025-09-19T12:28:56 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Buttons status=SUCCESS method=ElementsTests.Buttons()[pri:35, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:28:56 IST" name="setup" finished-at="2025-09-19T12:29:05 IST" duration-ms="8271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.DoubleClickButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="DoubleClickButtons()[pri:36, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:29:05 IST" name="DoubleClickButtons" finished-at="2025-09-19T12:29:07 IST" duration-ms="1852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoubleClickButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:29:07 IST" name="tearDown" finished-at="2025-09-19T12:34:09 IST" duration-ms="302782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DoubleClickButtons status=SUCCESS method=ElementsTests.DoubleClickButtons()[pri:36, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:09 IST" name="setup" finished-at="2025-09-19T12:34:23 IST" duration-ms="13807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.RightClickButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="RightClickButton()[pri:37, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:23 IST" name="RightClickButton" finished-at="2025-09-19T12:34:25 IST" duration-ms="1890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RightClickButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:25 IST" name="tearDown" finished-at="2025-09-19T12:34:25 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RightClickButton status=SUCCESS method=ElementsTests.RightClickButton()[pri:37, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:25 IST" name="setup" finished-at="2025-09-19T12:34:41 IST" duration-ms="16113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickMeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickMeButton()[pri:38, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:41 IST" name="ClickMeButton" finished-at="2025-09-19T12:34:42 IST" duration-ms="882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMeButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:42 IST" name="tearDown" finished-at="2025-09-19T12:34:43 IST" duration-ms="302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickMeButton status=SUCCESS method=ElementsTests.ClickMeButton()[pri:38, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:43 IST" name="setup" finished-at="2025-09-19T12:34:48 IST" duration-ms="5685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickAllButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAllButtons()[pri:39, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:48 IST" name="ClickAllButtons" finished-at="2025-09-19T12:34:52 IST" duration-ms="3418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAllButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:52 IST" name="tearDown" finished-at="2025-09-19T12:34:52 IST" duration-ms="569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAllButtons status=SUCCESS method=ElementsTests.ClickAllButtons()[pri:39, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:52 IST" name="setup" finished-at="2025-09-19T12:34:58 IST" duration-ms="5399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickLinks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickLinks()[pri:40, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:58 IST" name="ClickLinks" finished-at="2025-09-19T12:34:58 IST" duration-ms="644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLinks -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:58 IST" name="tearDown" finished-at="2025-09-19T12:34:59 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLinks status=SUCCESS method=ElementsTests.ClickLinks()[pri:40, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:34:59 IST" name="setup" finished-at="2025-09-19T12:35:06 IST" duration-ms="7466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickHomeLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickHomeLink()[pri:41, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:06 IST" name="ClickHomeLink" finished-at="2025-09-19T12:35:07 IST" duration-ms="719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickHomeLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:07 IST" name="tearDown" finished-at="2025-09-19T12:35:07 IST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickHomeLink status=SUCCESS method=ElementsTests.ClickHomeLink()[pri:41, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:07 IST" name="setup" finished-at="2025-09-19T12:35:13 IST" duration-ms="6300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickDynamicHomeLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickDynamicHomeLink()[pri:42, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:13 IST" name="ClickDynamicHomeLink" finished-at="2025-09-19T12:35:14 IST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDynamicHomeLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:14 IST" name="tearDown" finished-at="2025-09-19T12:35:15 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDynamicHomeLink status=SUCCESS method=ElementsTests.ClickDynamicHomeLink()[pri:42, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:15 IST" name="setup" finished-at="2025-09-19T12:35:42 IST" duration-ms="27436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickCreatedAPILink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickCreatedAPILink()[pri:43, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:42 IST" name="ClickCreatedAPILink" finished-at="2025-09-19T12:35:43 IST" duration-ms="897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickCreatedAPILink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:43 IST" name="tearDown" finished-at="2025-09-19T12:35:43 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickCreatedAPILink status=SUCCESS method=ElementsTests.ClickCreatedAPILink()[pri:43, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:43 IST" name="setup" finished-at="2025-09-19T12:35:49 IST" duration-ms="6077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickNoContentLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickNoContentLink()[pri:44, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:49 IST" name="ClickNoContentLink" finished-at="2025-09-19T12:35:50 IST" duration-ms="1068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNoContentLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:50 IST" name="tearDown" finished-at="2025-09-19T12:35:51 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNoContentLink status=SUCCESS method=ElementsTests.ClickNoContentLink()[pri:44, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:35:51 IST" name="setup" finished-at="2025-09-19T12:36:14 IST" duration-ms="23598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickMovedLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickMovedLink()[pri:45, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:14 IST" name="ClickMovedLink" finished-at="2025-09-19T12:36:15 IST" duration-ms="823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickMovedLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:15 IST" name="tearDown" finished-at="2025-09-19T12:36:15 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickMovedLink status=SUCCESS method=ElementsTests.ClickMovedLink()[pri:45, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:15 IST" name="setup" finished-at="2025-09-19T12:36:22 IST" duration-ms="6996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickBadRequestLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickBadRequestLink()[pri:46, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:22 IST" name="ClickBadRequestLink" finished-at="2025-09-19T12:36:23 IST" duration-ms="840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBadRequestLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:23 IST" name="tearDown" finished-at="2025-09-19T12:36:24 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickBadRequestLink status=SUCCESS method=ElementsTests.ClickBadRequestLink()[pri:46, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:24 IST" name="setup" finished-at="2025-09-19T12:36:34 IST" duration-ms="9905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickUnauthorizedLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickUnauthorizedLink()[pri:47, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:34 IST" name="ClickUnauthorizedLink" finished-at="2025-09-19T12:36:35 IST" duration-ms="1096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickUnauthorizedLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:35 IST" name="tearDown" finished-at="2025-09-19T12:36:35 IST" duration-ms="487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickUnauthorizedLink status=SUCCESS method=ElementsTests.ClickUnauthorizedLink()[pri:47, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:35 IST" name="setup" finished-at="2025-09-19T12:36:40 IST" duration-ms="5365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickForbiddenLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickForbiddenLink()[pri:48, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:40 IST" name="ClickForbiddenLink" finished-at="2025-09-19T12:36:41 IST" duration-ms="830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickForbiddenLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:41 IST" name="tearDown" finished-at="2025-09-19T12:36:42 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickForbiddenLink status=SUCCESS method=ElementsTests.ClickForbiddenLink()[pri:48, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:42 IST" name="setup" finished-at="2025-09-19T12:36:47 IST" duration-ms="5332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickNotFoundLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickNotFoundLink()[pri:49, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:47 IST" name="ClickNotFoundLink" finished-at="2025-09-19T12:36:48 IST" duration-ms="1010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNotFoundLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:48 IST" name="tearDown" finished-at="2025-09-19T12:36:48 IST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNotFoundLink status=SUCCESS method=ElementsTests.ClickNotFoundLink()[pri:49, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:36:48 IST" name="setup" finished-at="2025-09-19T12:37:05 IST" duration-ms="16894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickAllLinks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAllLinks()[pri:50, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:05 IST" name="ClickAllLinks" finished-at="2025-09-19T12:37:08 IST" duration-ms="2847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAllLinks -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:08 IST" name="tearDown" finished-at="2025-09-19T12:37:09 IST" duration-ms="776" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAllLinks status=SUCCESS method=ElementsTests.ClickAllLinks()[pri:50, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:09 IST" name="setup" finished-at="2025-09-19T12:37:14 IST" duration-ms="5604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ClickBrokenLinksImages()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickBrokenLinksImages()[pri:51, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:14 IST" name="ClickBrokenLinksImages" finished-at="2025-09-19T12:37:15 IST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickBrokenLinksImages -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:15 IST" name="tearDown" finished-at="2025-09-19T12:37:15 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickBrokenLinksImages status=SUCCESS method=ElementsTests.ClickBrokenLinksImages()[pri:51, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:15 IST" name="setup" finished-at="2025-09-19T12:37:21 IST" duration-ms="6011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.GetValidImage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetValidImage()[pri:52, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:21 IST" name="GetValidImage" finished-at="2025-09-19T12:37:22 IST" duration-ms="835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetValidImage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:22 IST" name="tearDown" finished-at="2025-09-19T12:37:23 IST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetValidImage status=SUCCESS method=ElementsTests.GetValidImage()[pri:52, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:23 IST" name="setup" finished-at="2025-09-19T12:37:54 IST" duration-ms="31607" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.GetBrokenImage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetBrokenImage()[pri:53, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:54 IST" name="GetBrokenImage" finished-at="2025-09-19T12:37:55 IST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetBrokenImage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:55 IST" name="tearDown" finished-at="2025-09-19T12:37:55 IST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetBrokenImage status=SUCCESS method=ElementsTests.GetBrokenImage()[pri:53, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:37:55 IST" name="setup" finished-at="2025-09-19T12:38:04 IST" duration-ms="8692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.BrokenLinksBrokenlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="BrokenLinksBrokenlink()[pri:54, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:04 IST" name="BrokenLinksBrokenlink" finished-at="2025-09-19T12:38:10 IST" duration-ms="6557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrokenLinksBrokenlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:10 IST" name="tearDown" finished-at="2025-09-19T12:38:11 IST" duration-ms="276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrokenLinksBrokenlink status=SUCCESS method=ElementsTests.BrokenLinksBrokenlink()[pri:54, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:11 IST" name="setup" finished-at="2025-09-19T12:38:17 IST" duration-ms="6023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.BrokenLinksValidlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="BrokenLinksValidlink()[pri:54, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:17 IST" name="BrokenLinksValidlink" finished-at="2025-09-19T12:38:18 IST" duration-ms="1569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrokenLinksValidlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:18 IST" name="tearDown" finished-at="2025-09-19T12:38:19 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrokenLinksValidlink status=SUCCESS method=ElementsTests.BrokenLinksValidlink()[pri:54, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:19 IST" name="setup" finished-at="2025-09-19T12:38:51 IST" duration-ms="32559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.UploadDownloadlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="UploadDownloadlink()[pri:55, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:51 IST" name="UploadDownloadlink" finished-at="2025-09-19T12:38:53 IST" duration-ms="1645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadDownloadlink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:38:53 IST" name="tearDown" finished-at="2025-09-19T12:43:55 IST" duration-ms="302709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UploadDownloadlink status=SUCCESS method=ElementsTests.UploadDownloadlink()[pri:55, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:43:55 IST" name="setup" finished-at="2025-09-19T12:44:10 IST" duration-ms="14462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.Downloadbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Downloadbtn()[pri:56, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:10 IST" name="Downloadbtn" finished-at="2025-09-19T12:44:15 IST" duration-ms="5029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Downloadbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:15 IST" name="tearDown" finished-at="2025-09-19T12:44:15 IST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Downloadbtn status=SUCCESS method=ElementsTests.Downloadbtn()[pri:56, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:15 IST" name="setup" finished-at="2025-09-19T12:44:28 IST" duration-ms="12721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.Uploadbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Uploadbtn()[pri:57, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:28 IST" name="Uploadbtn" finished-at="2025-09-19T12:44:30 IST" duration-ms="1941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Uploadbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:30 IST" name="tearDown" finished-at="2025-09-19T12:44:32 IST" duration-ms="1847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Uploadbtn status=SUCCESS method=ElementsTests.Uploadbtn()[pri:57, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:32 IST" name="setup" finished-at="2025-09-19T12:44:52 IST" duration-ms="20189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.DynamicPropertiesbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="DynamicPropertiesbtn()[pri:58, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:52 IST" name="DynamicPropertiesbtn" finished-at="2025-09-19T12:44:53 IST" duration-ms="697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DynamicPropertiesbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:53 IST" name="tearDown" finished-at="2025-09-19T12:44:54 IST" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DynamicPropertiesbtn status=SUCCESS method=ElementsTests.DynamicPropertiesbtn()[pri:58, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:44:54 IST" name="setup" finished-at="2025-09-19T12:45:05 IST" duration-ms="11332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.ColorChangebtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ColorChangebtn()[pri:59, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:05 IST" name="ColorChangebtn" finished-at="2025-09-19T12:45:06 IST" duration-ms="1078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ColorChangebtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:06 IST" name="tearDown" finished-at="2025-09-19T12:45:06 IST" duration-ms="305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ColorChangebtn status=SUCCESS method=ElementsTests.ColorChangebtn()[pri:59, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:06 IST" name="setup" finished-at="2025-09-19T12:45:12 IST" duration-ms="5749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.WillEnablebtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="WillEnablebtn()[pri:59, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:12 IST" name="WillEnablebtn" finished-at="2025-09-19T12:45:18 IST" duration-ms="5778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WillEnablebtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:18 IST" name="tearDown" finished-at="2025-09-19T12:45:18 IST" duration-ms="381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WillEnablebtn status=SUCCESS method=ElementsTests.WillEnablebtn()[pri:59, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:18 IST" name="setup" finished-at="2025-09-19T12:45:35 IST" duration-ms="16748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.ElementsTests.VisibleAfterbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VisibleAfterbtn()[pri:60, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:35 IST" name="VisibleAfterbtn" finished-at="2025-09-19T12:45:41 IST" duration-ms="6093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VisibleAfterbtn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ElementsTests@4f3bbf68]" started-at="2025-09-19T12:45:41 IST" name="tearDown" finished-at="2025-09-19T12:45:41 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VisibleAfterbtn status=SUCCESS method=ElementsTests.VisibleAfterbtn()[pri:60, instance:tests.ElementsTests@4f3bbf68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ElementsTests -->
      <class name="tests.AlertsFramesWindowsTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:00:12 IST" name="setupReport" finished-at="2025-09-19T12:00:12 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:00:12 IST" name="setup" finished-at="2025-09-19T12:00:49 IST" duration-ms="36415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.accessAlertsFrameWindows()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="accessAlertsFrameWindows()[pri:1, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:00:49 IST" name="accessAlertsFrameWindows" finished-at="2025-09-19T12:00:49 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAlertsFrameWindows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:00:49 IST" name="tearDown" finished-at="2025-09-19T12:00:49 IST" duration-ms="291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessAlertsFrameWindows status=SUCCESS method=AlertsFramesWindowsTests.accessAlertsFrameWindows()[pri:1, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:00:49 IST" name="setup" finished-at="2025-09-19T12:01:21 IST" duration-ms="31799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindows()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindows()[pri:2, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:01:21 IST" name="browserWindows" finished-at="2025-09-19T12:01:22 IST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:01:22 IST" name="tearDown" finished-at="2025-09-19T12:01:22 IST" duration-ms="285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindows status=SUCCESS method=AlertsFramesWindowsTests.browserWindows()[pri:2, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:01:22 IST" name="setup" finished-at="2025-09-19T12:01:56 IST" duration-ms="34571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindowsNewTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindowsNewTab()[pri:3, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:01:56 IST" name="browserWindowsNewTab" finished-at="2025-09-19T12:01:58 IST" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewTab -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:01:58 IST" name="tearDown" finished-at="2025-09-19T12:01:58 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewTab status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewTab()[pri:3, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:01:58 IST" name="setup" finished-at="2025-09-19T12:02:12 IST" duration-ms="14029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindowsNewWindow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindowsNewWindow()[pri:4, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:02:12 IST" name="browserWindowsNewWindow" finished-at="2025-09-19T12:02:13 IST" duration-ms="986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewWindow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:02:13 IST" name="tearDown" finished-at="2025-09-19T12:02:13 IST" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewWindow status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewWindow()[pri:4, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:02:13 IST" name="setup" finished-at="2025-09-19T12:02:25 IST" duration-ms="12156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.browserWindowsNewWindowMsg()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browserWindowsNewWindowMsg()[pri:5, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:02:25 IST" name="browserWindowsNewWindowMsg" finished-at="2025-09-19T12:02:26 IST" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserWindowsNewWindowMsg -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:02:26 IST" name="tearDown" finished-at="2025-09-19T12:02:27 IST" duration-ms="354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browserWindowsNewWindowMsg status=SUCCESS method=AlertsFramesWindowsTests.browserWindowsNewWindowMsg()[pri:5, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:02:27 IST" name="setup" finished-at="2025-09-19T12:03:03 IST" duration-ms="36615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickAlerts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAlerts()[pri:6, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:03 IST" name="ClickAlerts" finished-at="2025-09-19T12:03:04 IST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAlerts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:04 IST" name="tearDown" finished-at="2025-09-19T12:03:04 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAlerts status=SUCCESS method=AlertsFramesWindowsTests.ClickAlerts()[pri:6, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:04 IST" name="setup" finished-at="2025-09-19T12:03:36 IST" duration-ms="31803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickToSeeAlerts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickToSeeAlerts()[pri:7, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:36 IST" name="ClickToSeeAlerts" finished-at="2025-09-19T12:03:42 IST" duration-ms="6037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickToSeeAlerts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:42 IST" name="tearDown" finished-at="2025-09-19T12:03:42 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickToSeeAlerts status=SUCCESS method=AlertsFramesWindowsTests.ClickToSeeAlerts()[pri:7, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:42 IST" name="setup" finished-at="2025-09-19T12:03:57 IST" duration-ms="15202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickAcceptConfirmationBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickAcceptConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:57 IST" name="ClickAcceptConfirmationBox" finished-at="2025-09-19T12:03:58 IST" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAcceptConfirmationBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:58 IST" name="tearDown" finished-at="2025-09-19T12:03:58 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAcceptConfirmationBox status=SUCCESS method=AlertsFramesWindowsTests.ClickAcceptConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:03:58 IST" name="setup" finished-at="2025-09-19T12:04:12 IST" duration-ms="13631" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickDenyConfirmationBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickDenyConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:12 IST" name="ClickDenyConfirmationBox" finished-at="2025-09-19T12:04:13 IST" duration-ms="823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDenyConfirmationBox -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:13 IST" name="tearDown" finished-at="2025-09-19T12:04:13 IST" duration-ms="309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDenyConfirmationBox status=SUCCESS method=AlertsFramesWindowsTests.ClickDenyConfirmationBox()[pri:8, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:13 IST" name="setup" finished-at="2025-09-19T12:04:18 IST" duration-ms="5352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickPromptBoxFill()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickPromptBoxFill()[pri:9, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:18 IST" name="ClickPromptBoxFill" finished-at="2025-09-19T12:04:20 IST" duration-ms="1054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickPromptBoxFill -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:20 IST" name="tearDown" finished-at="2025-09-19T12:04:20 IST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickPromptBoxFill status=SUCCESS method=AlertsFramesWindowsTests.ClickPromptBoxFill()[pri:9, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:20 IST" name="setup" finished-at="2025-09-19T12:04:47 IST" duration-ms="27473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickFrames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickFrames()[pri:10, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:47 IST" name="ClickFrames" finished-at="2025-09-19T12:04:48 IST" duration-ms="529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickFrames -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:48 IST" name="tearDown" finished-at="2025-09-19T12:04:48 IST" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickFrames status=SUCCESS method=AlertsFramesWindowsTests.ClickFrames()[pri:10, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:04:48 IST" name="setup" finished-at="2025-09-19T12:05:03 IST" duration-ms="14794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetFrame1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetFrame1()[pri:11, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:03 IST" name="GetFrame1" finished-at="2025-09-19T12:05:04 IST" duration-ms="740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFrame1 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:04 IST" name="tearDown" finished-at="2025-09-19T12:05:04 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFrame1 status=SUCCESS method=AlertsFramesWindowsTests.GetFrame1()[pri:11, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:04 IST" name="setup" finished-at="2025-09-19T12:05:21 IST" duration-ms="16642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetFrame2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetFrame2()[pri:12, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:21 IST" name="GetFrame2" finished-at="2025-09-19T12:05:22 IST" duration-ms="1286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFrame2 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:22 IST" name="tearDown" finished-at="2025-09-19T12:05:22 IST" duration-ms="500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFrame2 status=SUCCESS method=AlertsFramesWindowsTests.GetFrame2()[pri:12, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:22 IST" name="setup" finished-at="2025-09-19T12:05:37 IST" duration-ms="14789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickModalDialogs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickModalDialogs()[pri:13, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:37 IST" name="ClickModalDialogs" finished-at="2025-09-19T12:05:38 IST" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickModalDialogs -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:38 IST" name="tearDown" finished-at="2025-09-19T12:05:38 IST" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickModalDialogs status=SUCCESS method=AlertsFramesWindowsTests.ClickModalDialogs()[pri:13, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:38 IST" name="setup" finished-at="2025-09-19T12:05:44 IST" duration-ms="5980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickNestedFrames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickNestedFrames()[pri:13, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:44 IST" name="ClickNestedFrames" finished-at="2025-09-19T12:05:44 IST" duration-ms="461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickNestedFrames -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:44 IST" name="tearDown" finished-at="2025-09-19T12:05:45 IST" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickNestedFrames status=SUCCESS method=AlertsFramesWindowsTests.ClickNestedFrames()[pri:13, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:45 IST" name="setup" finished-at="2025-09-19T12:05:55 IST" duration-ms="10085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickLargeModal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickLargeModal()[pri:14, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:55 IST" name="ClickLargeModal" finished-at="2025-09-19T12:05:56 IST" duration-ms="922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLargeModal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:56 IST" name="tearDown" finished-at="2025-09-19T12:05:56 IST" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLargeModal status=SUCCESS method=AlertsFramesWindowsTests.ClickLargeModal()[pri:14, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:05:56 IST" name="setup" finished-at="2025-09-19T12:06:16 IST" duration-ms="20014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.ClickSmallModal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ClickSmallModal()[pri:14, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:06:16 IST" name="ClickSmallModal" finished-at="2025-09-19T12:06:25 IST" duration-ms="9033" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[❌ smartClick failed after 3 attempts]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: ❌ smartClick failed after 3 attempts
at utils.ClickHandler.smartClick(ClickHandler.java:100)
at pages.homePage.clickAlertsFrameWindowsCard(homePage.java:36)
at pages.alertsframewindowsPage.accessAlertFramesWindows(alertsframewindowsPage.java:147)
at tests.AlertsFramesWindowsTests.ClickSmallModal(AlertsFramesWindowsTests.java:272)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, findElement {value=//body/div[@id='app']/div[@class='body-height']/div[@class='home-content']/div[@class='home-body']/div[@class='category-cards']/div[3]/div[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\dell\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62242}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62242/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:176)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at utils.ClickHandler.smartClick(ClickHandler.java:78)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSmallModal -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:06:25 IST" name="tearDown" finished-at="2025-09-19T12:06:25 IST" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickSmallModal status=FAILURE method=AlertsFramesWindowsTests.ClickSmallModal()[pri:14, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:34)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:40)
at base.demoqaBase.tearDown(demoqaBase.java:64)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:06:25 IST" name="setup" finished-at="2025-09-19T12:06:42 IST" duration-ms="16557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetParentFrame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetParentFrame()[pri:14, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:06:42 IST" name="GetParentFrame" finished-at="2025-09-19T12:06:42 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:34)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:40)
at base.demoqaBase.tearDown(demoqaBase.java:64)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetParentFrame -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:06:42 IST" name="tearDown" finished-at="2025-09-19T12:06:42 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetParentFrame status=SKIP method=AlertsFramesWindowsTests.GetParentFrame()[pri:14, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:06:42 IST" name="setup" finished-at="2025-09-19T12:07:18 IST" duration-ms="35584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AlertsFramesWindowsTests.GetChildFrame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="GetChildFrame()[pri:15, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:07:18 IST" name="GetChildFrame" finished-at="2025-09-19T12:07:18 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ScreenCapture path must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ScreenCapture path must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:34)
at com.aventstack.extentreports.MediaEntityBuilder.createScreenCaptureFromPath(MediaEntityBuilder.java:40)
at base.demoqaBase.tearDown(demoqaBase.java:64)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetChildFrame -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T12:07:18 IST" name="tearDown" finished-at="2025-09-19T12:07:18 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetChildFrame status=SKIP method=AlertsFramesWindowsTests.GetChildFrame()[pri:15, instance:tests.AlertsFramesWindowsTests@6239aba6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="teardownSuite()[pri:0, instance:tests.AlertsFramesWindowsTests@6239aba6]" started-at="2025-09-19T13:04:39 IST" name="teardownSuite" finished-at="2025-09-19T13:05:01 IST" duration-ms="21584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownSuite -->
      </class> <!-- tests.AlertsFramesWindowsTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
